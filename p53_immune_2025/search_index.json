[["index.html", "Immune analysis for p53 project Chapter 1 Introduction", " Immune analysis for p53 project Jia-Bing Li, Yu-Ting Dai 2025-01-15 Chapter 1 Introduction This tutorial covers fundamental codes for immune analysis of mutant p53, encompassing data pre-processing, quality control, and visualization. "],["scrna-seq.html", "Chapter 2 scRNA-seq 2.1 Load packages 2.2 Analysis of scRNA-seq data 2.3 Visualization of scRNA-seq data 2.4 Markers identification 2.5 CellPhoneDB analysis", " Chapter 2 scRNA-seq 2.1 Load packages suppressMessages({ library(Seurat) library(dplyr) library(Matrix) library(gplots) library(matrixStats) library(sva) library(ggpubr) library(openxlsx) library(stringr) library(ggthemes) library(destiny) library(grDevices) library(reticulate) library(L1Graph) library(Biobase) library(scatterplot3d) library(monocle) library(pheatmap) library(harmony) library(SingleR) library(dplyr) library(clusterProfiler) library(colorRamps) library(RColorBrewer) }) color.lib &lt;- c(&quot;#A6761D&quot;, &quot;#A6CEE3&quot;, &quot;#1F78B4&quot;, &quot;#B2DF8A&quot;, &quot;#33A02C&quot;, &quot;#FB9A99&quot;, &quot;#E31A1C&quot;, &quot;#FDBF6F&quot;, &quot;#FF7F00&quot;, &quot;#CAB2D6&quot;, &quot;#6A3D9A&quot;, &quot;#F4B3BE&quot;, &quot;#1B9E77&quot;, &quot;#D95F02&quot;, &quot;#7570B3&quot;, &quot;#E7298A&quot;, &quot;#66A61E&quot;, &quot;#E6AB02&quot;, &quot;#F4A11D&quot;, &quot;#8DC8ED&quot;, &quot;#4C6CB0&quot;, &quot;#8A1C1B&quot;, &quot;#CBCC2B&quot;, &quot;#EA644C&quot;, &quot;#634795&quot;, &quot;#005B1D&quot;, &quot;#26418A&quot;, &quot;#CB8A93&quot;, &quot;#F1E404&quot;, &quot;#E22826&quot;, &quot;#50C1FF&quot;, &quot;#F4D31D&quot;, &quot;#F4A11D&quot;, &quot;#82C800&quot;, &quot;#8B5900&quot;, &quot;#858ED1&quot;, &quot;#FF72E1&quot;, &quot;#CB50B2&quot;, &quot;#007D9B&quot;, &quot;#26418A&quot;, &quot;#8B495F&quot;, &quot;#FF394B&quot;) 2.2 Analysis of scRNA-seq data out.path &lt;- &quot;out.path&quot; pdf(paste0(out.path, &quot;/2.filter.vlnplot.pdf&quot;), width = 12, height = 7) VlnPlot(p53, features = c(&quot;nFeature_RNA&quot;, &quot;nCount_RNA&quot;, &quot;percent.mt&quot;), ncol = 3) dev.off() pdf(paste0(out.path, &quot;/2.filter.geneplot.pdf&quot;), width = 12, height = 7) plot1 &lt;- FeatureScatter(p53, feature1 = &quot;nCount_RNA&quot;, group.by = &quot;Sample&quot;, feature2 = &quot;percent.mt&quot;) plot2 &lt;- FeatureScatter(p53, feature1 = &quot;nCount_RNA&quot;, group.by = &quot;Sample&quot;, feature2 = &quot;nFeature_RNA&quot;) plot1 + plot2 dev.off() p53 &lt;- NormalizeData(p53, normalization.method = &quot;LogNormalize&quot;, scale.factor = 10000) p53 &lt;- FindVariableFeatures(p53, selection.method = &quot;vst&quot;, nfeatures = 2000) # Identify the 10 most highly variable genes top10 &lt;- head(VariableFeatures(p53), 10) # plot variable features with and without labels pdf(paste0(out.path, &quot;/3.VariableFeaturePlot.pdf&quot;), width = 12, height = 7) plot1 &lt;- VariableFeaturePlot(p53) plot2 &lt;- LabelPoints(plot = plot1, points = top10, repel = TRUE) plot1 + plot2 dev.off() all.genes &lt;- rownames(p53) p53 &lt;- ScaleData(p53, features = VariableFeatures(object = p53)) p53 &lt;- RunPCA(p53, features = VariableFeatures(object = p53)) p &lt;- DimPlot(p53, reduction = &quot;pca&quot;, group.by = &quot;Sample&quot;) + theme_few() ggsave(paste0(out.path, &quot;/4.PCA.pdf&quot;), p, width = 9, height = 7) p53 &lt;- RunHarmony(p53, &quot;Batch&quot;, max.iter.harmony = 3, sigma = 0.1, max.iter.cluster = 10) p53 &lt;- FindNeighbors(p53, reduction = &quot;harmony&quot;, dims = 1:20) p53 &lt;- FindClusters(p53, resolution = 0.8) p53 &lt;- RunTSNE(p53, reduction = &quot;harmony&quot;, dims = 1:20, perplexity = 50) p53 &lt;- RunUMAP(p53, reduction = &quot;harmony&quot;, dims = 1:20) table(Idents(p53)) 2.3 Visualization of scRNA-seq data p &lt;- DimPlot(p53, reduction = &quot;umap&quot;, pt.size = 0.5, group.by = &quot;clusters&quot;, cols = color.lib) + theme_few() ggsave(paste0(out.path, &quot;/5.UMAP.cluster.pdf&quot;), p, width = 9, height = 7) p &lt;- DimPlot(p53, reduction = &quot;umap&quot;, pt.size = 0.5, label = TRUE, label.size = 10, group.by = &quot;clusters&quot;, cols = color.lib) + theme_few() ggsave(paste0(out.path, &quot;/5.UMAP.cluster.label.pdf&quot;), p, width = 9, height = 7) p &lt;- DimPlot(p53, reduction = &quot;umap&quot;, pt.size = 0.5, group.by = &quot;Sample&quot;, cols = color.sample) + theme_few() ggsave(paste0(out.path, &quot;/5.UMAP.sample.pdf&quot;), p, width = 8.5, height = 7) p &lt;- DimPlot(p53, reduction = &quot;umap&quot;, pt.size = 0.5, group.by = &quot;CellType&quot;, cols = color.cell) + theme_few() ggsave(paste0(out.path, &quot;/5.UMAP.cell.pdf&quot;), p, width = 9, height = 7) p &lt;- DimPlot(p53, reduction = &quot;umap&quot;, pt.size = 0.5, group.by = &quot;CellType&quot;, split.by = &quot;Sample&quot;, ncol = 2, cols = color.cell) + theme_few() ggsave(paste0(out.path, &quot;/5.UMAP.cell.SplitSample.pdf&quot;), p, width = 12, height = 10) p &lt;- DimPlot(p53, reduction = &quot;tsne&quot;, pt.size = 0.5, group.by = &quot;clusters&quot;, cols = color.lib) + theme_few() ggsave(paste0(out.path, &quot;/6.tSNE.cluster.pdf&quot;), p, width = 9, height = 7) p &lt;- DimPlot(p53, reduction = &quot;tsne&quot;, pt.size = 0.5, label = TRUE, label.size = 10, group.by = &quot;clusters&quot;, cols = color.lib) + theme_few() ggsave(paste0(out.path, &quot;/6.tSNE.cluster.label.pdf&quot;), p, width = 9, height = 7) p &lt;- DimPlot(p53, reduction = &quot;tsne&quot;, pt.size = 0.5, group.by = &quot;Sample&quot;, cols = color.sample) + theme_few() ggsave(paste0(out.path, &quot;/6.tSNE.sample.pdf&quot;), p, width = 8, height = 7) p &lt;- DimPlot(p53, reduction = &quot;tsne&quot;, pt.size = 0.5, group.by = &quot;CellType&quot;, cols = color.cell) + theme_few() ggsave(paste0(out.path, &quot;/6.tSNE.cell.pdf&quot;), p, width = 9, height = 7) p &lt;- DimPlot(p53, reduction = &quot;tsne&quot;, pt.size = 0.5, group.by = &quot;CellType&quot;, split.by = &quot;Sample&quot;, ncol = 2, cols = color.cell) + theme_few() ggsave(paste0(out.path, &quot;/6.tSNE.cell.SplitSample.pdf&quot;), p, width = 12, height = 10) 2.4 Markers identification Idents(p53) &lt;- p53$CellType all.markers &lt;- FindAllMarkers(p53, only.pos = TRUE) all.markers &lt;- all.markers[which(all.markers$p_val_adj &lt; 0.05), ] write.xlsx(all.markers, paste0(out.path, &quot;/1.topMarkers.CellType.xlsx&quot;), rowNames = T, overwrite = T) all.markers &lt;- read.xlsx(paste0(out.path, &quot;/1.topMarkers.CellType.xlsx&quot;), rowNames = T) top10 &lt;- all.markers %&gt;% group_by(cluster) %&gt;% top_n(n = 10, wt = avg_log2FC) gene.list &lt;- unique(top10$gene) p &lt;- DotPlot(p53, features = rev(gene.list), group.by = &quot;CellType&quot;, dot.scale = 8, cols = c(&quot;#DDDDDD&quot;, &quot;#003366&quot; ), col.min = -1) + RotatedAxis() p &lt;- p + theme_base() + theme(axis.text.x = element_text(angle = 90,hjust = 1,vjust = 0.5, size=20)) p &lt;- p + theme(axis.text.y = element_text(size = 10)) p &lt;- p + coord_flip() + scale_size(range = c(0, 6)) p &lt;- p + gradient_color(c(&quot;#EEEEEE&quot;,&quot;#ffb459&quot;,&quot;#e8613c&quot;,&quot;#b70909&quot;)) ggsave(paste0(out.path, &quot;/Top.markers.CellType.pdf&quot;), p, width = 8, height = 13) 2.5 CellPhoneDB analysis ########### cellphonedb out.path.ccc &lt;- paste0(out.path, &quot;/ccc_all_state&quot;) system(sprintf(&quot;mkdir %s&quot;, out.path.ccc)) gene.id &lt;- read.table(&quot;/public/home/daiyt/reference/human/hg38/gencode/gene.id.v40.txt&quot;) gene.id.coding &lt;- gene.id[which(gene.id$V6 == &quot;protein_coding&quot;), ] out.data &lt;- p53@assays$RNA@data[, which(!is.na(p53$CellTypeAnno))] out.data &lt;- out.data[rowSums(out.data) &gt; 0, ] out.data &lt;- out.data[rownames(out.data) %in% gene.id.coding$V7, ] out.data &lt;- as.data.frame(out.data) out.data &lt;- round(out.data, 5) out.ccc.mat &lt;- data.frame(Gene = rownames(out.data), out.data) out.meta &lt;- p53@meta.data[colnames(out.data), c(&quot;CellType&quot;,&quot;CellTypeAnno&quot;)] colnames(out.meta) &lt;- c(&quot;Cell&quot;, &quot;cell_type&quot;) out.meta$Cell = rownames(out.meta) out.meta$Cell &lt;- str_replace_all(out.meta$Cell, &quot;-&quot;, &quot;.&quot;) sum(out.meta$Cell != colnames(out.ccc.mat)[2:ncol(out.ccc.mat)]) write.table(out.ccc.mat, paste0(out.path.ccc, &quot;/exp.mat.txt&quot;), row.names = F, col.names = T, sep = &quot;\\t&quot;, quote = F) write.table(out.meta, paste0(out.path.ccc, &quot;/meta.data.txt&quot;), row.names = F, col.names = T, sep = &quot;\\t&quot;, quote = F) &#39; cellphonedb method statistical_analysis meta.data.txt exp.mat.txt --threads=20 --iterations=100 --counts-data=gene_name --output-path=out.merge_tumor_T &#39; "],["tcga.html", "Chapter 3 TCGA 3.1 Download data 3.2 Load packages 3.3 Estimate score 3.4 Visualization 3.5 T-cell signature 3.6 T-cell signature", " Chapter 3 TCGA 3.1 Download data The RNA-seq gene expressions, clinical characteristics, and mutation information of TCGA Pan-Cancer Atlas were downloaded from UCSC Xena (https://xenabrowser.net/) via data page (https://xenabrowser.net/datapages/). 3.2 Load packages suppressMessages({ library(openxlsx) library(dplyr) library(DT) library(DESeq2) library(estimate) library(ggplot2) library(ggthemes) library(reshape2) library(pheatmap) library(stringr) library(ggpubr) }) color.lib &lt;- c(&quot;#A6761D&quot;, &quot;#A6CEE3&quot;, &quot;#1F78B4&quot;, &quot;#B2DF8A&quot;, &quot;#33A02C&quot;, &quot;#FB9A99&quot;, &quot;#E31A1C&quot;, &quot;#FDBF6F&quot;, &quot;#FF7F00&quot;, &quot;#CAB2D6&quot;, &quot;#6A3D9A&quot;, &quot;#F4B3BE&quot;, &quot;#1B9E77&quot;, &quot;#D95F02&quot;, &quot;#7570B3&quot;, &quot;#E7298A&quot;, &quot;#66A61E&quot;, &quot;#E6AB02&quot;, &quot;#F4A11D&quot;, &quot;#8DC8ED&quot;, &quot;#4C6CB0&quot;, &quot;#8A1C1B&quot;, &quot;#CBCC2B&quot;, &quot;#EA644C&quot;, &quot;#634795&quot;, &quot;#005B1D&quot;, &quot;#26418A&quot;, &quot;#CB8A93&quot;, &quot;#F1E404&quot;, &quot;#E22826&quot;, &quot;#50C1FF&quot;, &quot;#F4D31D&quot;, &quot;#F4A11D&quot;, &quot;#82C800&quot;, &quot;#8B5900&quot;, &quot;#858ED1&quot;, &quot;#FF72E1&quot;, &quot;#CB50B2&quot;, &quot;#007D9B&quot;, &quot;#26418A&quot;, &quot;#8B495F&quot;, &quot;#FF394B&quot;) 3.3 Estimate score ######## estimate Score total.score &lt;- NULL for (kkk in 1:33) { message(kkk, &quot; &quot;, TCGA.COHORT[kkk]) sub &lt;- tcga.meta[which(tcga.meta$project_id == TCGA.COHORT[kkk] ), ] sub.mat &lt;- tcga.fpkm[, sub$sample] write.table(sub.mat, &quot;output/estimate/Exp.mat.txt&quot;, row.names = T, col.names = T, sep = &quot;\\t&quot;, quote = F) filterCommonGenes(input.f = &quot;output/estimate/Exp.mat.txt&quot;, output.f=&quot;output/estimate/Exp.mat.gct&quot;, id=&quot;GeneSymbol&quot;) estimateScore(&quot;output/estimate/Exp.mat.gct&quot;, &quot;output/estimate/estimateScore.gct&quot;, platform=&quot;affymetrix&quot;) estimate.score &lt;- read.table(&quot;output/estimate/estimateScore.gct&quot;, sep = &quot;\\t&quot;, header = T, row.names = 1, check.names = F) estimate.score &lt;- estimate.score[, -1] estimate.score &lt;- data.frame(t(estimate.score)) for (i in 2:ncol(estimate.score)) { estimate.score[, i] &lt;- as.numeric(estimate.score[, i]) } estimate.score$Sample &lt;- colnames(sub.mat) write.xlsx(estimate.score, paste0(&quot;output/estimate/&quot;, TCGA.COHORT[kkk], &quot;.estimate.xlsx&quot;)) } ######## estimate Score total.score &lt;- NULL for (kkk in 1:33) { estimate.score &lt;- read.xlsx(paste0(&quot;output/estimate/&quot;, TCGA.COHORT[kkk], &quot;.estimate.xlsx&quot;)) estimate.score$ImmuneScoreNor &lt;- estimate.score$ImmuneScore - min(estimate.score$ImmuneScore) total.score &lt;- rbind(total.score, estimate.score) } write.xlsx(total.score, &quot;output/estimate/1.ImmuneScore.xlsx&quot;) 3.4 Visualization plot.data &lt;- read.xlsx(&quot;output/estimate/1.ImmuneScore.xlsx&quot;) TCGA.ALL &lt;- c(&quot;TCGA-OV&quot;,&quot;TCGA-UCS&quot;,&quot;TCGA-LUSC&quot;,&quot;TCGA-ESCA&quot;,&quot;TCGA-READ&quot;,&quot;TCGA-HNSC&quot;,&quot;TCGA-PAAD&quot;, &quot;TCGA-COAD&quot;,&quot;TCGA-LUAD&quot;,&quot;TCGA-BLCA&quot;,&quot;TCGA-STAD&quot;,&quot;TCGA-LGG&quot;,&quot;TCGA-UCEC&quot;,&quot;TCGA-SARC&quot;, &quot;TCGA-BRCA&quot;,&quot;TCGA-GBM&quot;,&quot;TCGA-LIHC&quot;,&quot;TCGA-KICH&quot;,&quot;TCGA-ACC&quot;,&quot;TCGA-MESO&quot;,&quot;TCGA-DLBC&quot;, &quot;TCGA-PRAD&quot;,&quot;TCGA-CHOL&quot;,&quot;TCGA-SKCM&quot;,&quot;TCGA-CESC&quot;,&quot;TCGA-LAML&quot;,&quot;TCGA-THYM&quot;,&quot;TCGA-KIRC&quot;, &quot;TCGA-KIRP&quot;,&quot;TCGA-TGCT&quot;,&quot;TCGA-THCA&quot;,&quot;TCGA-PCPG&quot;,&quot;TCGA-UVM&quot;) enroll.id &lt;- c(&quot;HNSC&quot;,&quot;STAD&quot;,&quot;LUSC&quot;,&quot;COAD&quot;,&quot;UCEC&quot;,&quot;CESC&quot;,&quot;GBM&quot;,&quot;LIHC&quot;,&quot;LUAD&quot;,&quot;SKCM&quot;,&quot;ESCA&quot;,&quot;OV&quot;,&quot;READ&quot;,&quot;LAML&quot;,&quot;PAAD&quot;,&quot;BLCA&quot;,&quot;PRAD&quot;,&quot;SARC&quot;,&quot;LGG&quot;,&quot;BRCA&quot;) enroll.id &lt;- paste0(&quot;TCGA-&quot;, enroll.id) plot.info &lt;- data.frame(Cohort = TCGA.ALL, Diff = 0, P = NA) plot.info &lt;- plot.info[plot.info$Cohort %in% enroll.id, ] for (i in 1:nrow(plot.info)) { sub &lt;- plot.data[which(plot.data$project_id == plot.info$Cohort[i] ), ] sub.1 &lt;- sub[which(sub$TP53mut == &quot;No&quot;), ] sub.2 &lt;- sub[which(sub$TP53mut == &quot;Yes&quot;), ] plot.info$Score_wt[i] &lt;- mean(sub.1$ImmuneScoreNor) plot.info$Score_mut[i] &lt;- mean(sub.2$ImmuneScoreNor) plot.info$Diff[i] &lt;- mean(sub.1$ImmuneScoreNor) - mean(sub.2$ImmuneScoreNor) plot.info$P[i] &lt;- wilcox.test(sub.1$ImmuneScoreNor, sub.2$ImmuneScoreNor )$p.value } plot.info$LogP &lt;- -log10(plot.info$P) plot.info$AbsDiff &lt;- abs(plot.info$Diff) plot.info &lt;- plot.info[order(plot.info$LogP, decreasing = T), ] plot.info$Type &lt;- &quot;notSig&quot; plot.info$Type[which(plot.info$P &lt; 0.05 &amp; plot.info$Diff &gt; 0)] &lt;- &quot;up&quot; plot.info$Type[which(plot.info$P &lt; 0.05 &amp; plot.info$Diff &lt; 0)] &lt;- &quot;down&quot; plot.info$Mod_P &lt;- plot.info$LogP plot.info$Mod_P[which(plot.info$Mod_P &gt; 4)] &lt;- 4 #plot.info$Mod_P[which(plot.info$Mod_P &lt; 1.30)] &lt;- 1.30 plot.info$Sign_P &lt;- plot.info$Mod_P plot.info$Sign_P[which(plot.info$Diff &lt; 0 )] &lt;- plot.info$Sign_P[which(plot.info$Diff &lt; 0 )] * -1 plot.info$Label &lt;- str_replace_all(plot.info$Cohort, &quot;TCGA-&quot;, &quot;&quot;) plot.info$Label[which(plot.info$Type == &quot;notSig&quot;)] &lt;- &quot;&quot; p &lt;- ggscatter(plot.info, x = &quot;Score_mut&quot;, y = &quot;Score_wt&quot;, color = &quot;Type&quot;, palette = c(down = &quot;#2bb0f2&quot;, up = &quot;#CE0000&quot;, notSig = &quot;#666666&quot;), label = &quot;Label&quot;, size = &quot;Mod_P&quot;) p &lt;- p + theme_base() + scale_x_continuous(limits = c(1000,2800)) + scale_y_continuous(limits = c(1000,2800)) p &lt;- p + scale_size(range = c(6, 6)) + theme(plot.background = element_blank()) p 3.5 T-cell signature signature.t.cell &lt;- read.xlsx(&quot;output/T_signature/T-marker.xlsx&quot;) signature.t.cell$CellTypeAll &lt;- paste0(signature.t.cell$Cell, &quot;_&quot;, signature.t.cell$CellType) score.mat &lt;- NULL plot.cell &lt;- unique(signature.t.cell$CellTypeAll) for (i in 1:length(plot.cell)) { sub &lt;- signature.t.cell[which(signature.t.cell$CellTypeAll == plot.cell[i]), ] sub.mat &lt;- colMeans(tcga.fpkm[rownames(tcga.fpkm) %in% sub$Gene, ]) score.mat &lt;- cbind(score.mat, sub.mat) } colnames(score.mat) &lt;- plot.cell saveRDS(score.mat, &quot;output/T_signature/t_signature.tcga.mat.rds&quot;) 3.6 T-cell signature score.mat &lt;- readRDS(&quot;output/T_signature/t_signature.tcga.mat.rds&quot;) tcga.meta &lt;- read.xlsx(&quot;output/T_signature/tcga.meta.xlsx&quot;) plot.data &lt;- tcga.meta[which(!is.na(tcga.meta$TP53mut) &amp; tcga.meta$sample_type == &quot;Primary Tumor&quot;), ] plot.data &lt;- plot.data[ plot.data$project_id %in% enroll.id, ] plot.info &lt;- NULL for (kkk in 1:ncol(score.mat)) { plot.sub &lt;- data.frame(Cohort = enroll.id, Diff = 0, P = NA) plot.sub &lt;- plot.sub[plot.sub$Cohort %in% enroll.id, ] plot.data$Score &lt;- score.mat[plot.data$sample, kkk] for (i in 1:nrow(plot.sub)) { sub &lt;- plot.data[which(plot.data$project_id == plot.sub$Cohort[i] ), ] sub.1 &lt;- sub[which(sub$TP53mut == &quot;No&quot;), ] sub.2 &lt;- sub[which(sub$TP53mut == &quot;Yes&quot;), ] plot.sub$Diff[i] &lt;- mean(sub.1$Score) - mean(sub.2$Score) plot.sub$P[i] &lt;- wilcox.test(sub.1$Score, sub.2$Score, alternative = &quot;two.sided&quot;)$p.value } plot.sub$CellTypeAll &lt;- colnames(score.mat)[kkk] plot.info &lt;- rbind(plot.info, plot.sub) } plot.info$LogP &lt;- -log10(plot.info$P) plot.info$AbsDiff &lt;- abs(plot.info$Diff) plot.info$Type &lt;- &quot;notSig&quot; plot.info$Type[which(plot.info$P &lt; 0.05 &amp; plot.info$Diff &gt; 0)] &lt;- &quot;up&quot; plot.info$Type[which(plot.info$P &lt; 0.05 &amp; plot.info$Diff &lt; 0)] &lt;- &quot;down&quot; plot.info$Cohort &lt;- factor(as.character(plot.info$Cohort), levels = rev(enroll.id) ) plot.info$CellTypeAll &lt;- factor(as.character(plot.info$CellTypeAll), levels = colnames(score.mat) ) p &lt;- ggplot(plot.info, aes( x = CellTypeAll, y = Cohort )) + geom_point( aes(size = LogP, color = Type), shape = 15 ) p &lt;- p + labs(title = paste0(&quot;T cell score&quot;), x = &quot;&quot;, y = &quot;&quot;) p &lt;- p + scale_color_manual(values = c(down = &quot;#9bdfff&quot;, notSig = &quot;#EEEEEE&quot;, up = &quot;#CE0000&quot;) ) p &lt;- p + theme_bw() + theme(plot.background = element_blank()) p &lt;- p + theme(axis.text.x = element_text(angle = 90,hjust = 1,vjust = 0.5)) p &lt;- p + scale_size(range = c(1, 5)) p "],["about-this-project.html", "Chapter 4 About this project Current version Session Information", " Chapter 4 About this project Current version Version: 1.0.1 Release Date: 2023-11-14 Session Information # Show session information sessionInfo() ## R version 4.3.2 (2023-10-31) ## Platform: x86_64-apple-darwin20 (64-bit) ## Running under: macOS Ventura 13.0.1 ## ## Matrix products: default ## BLAS: /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib; LAPACK version 3.11.0 ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## time zone: Europe/Paris ## tzcode source: internal ## ## attached base packages: ## [1] stats4 stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] ggpubr_0.6.0 stringr_1.5.1 pheatmap_1.0.12 ## [4] reshape2_1.4.4 ggthemes_5.0.0 ggplot2_3.4.4 ## [7] estimate_1.0.13 DESeq2_1.42.0 SummarizedExperiment_1.32.0 ## [10] Biobase_2.62.0 MatrixGenerics_1.14.0 matrixStats_1.2.0 ## [13] GenomicRanges_1.54.1 GenomeInfoDb_1.38.1 IRanges_2.36.0 ## [16] S4Vectors_0.40.2 BiocGenerics_0.48.1 DT_0.31 ## [19] dplyr_1.1.4 openxlsx_4.2.5.2 ## ## loaded via a namespace (and not attached): ## [1] tidyselect_1.2.1 farver_2.1.1 bitops_1.0-7 ## [4] fastmap_1.2.0 RCurl_1.98-1.13 digest_0.6.36 ## [7] lifecycle_1.0.4 magrittr_2.0.3 compiler_4.3.2 ## [10] sass_0.4.9 rlang_1.1.4 tools_4.3.2 ## [13] utf8_1.2.4 yaml_2.3.10 knitr_1.48 ## [16] ggsignif_0.6.4 S4Arrays_1.2.0 labeling_0.4.3 ## [19] htmlwidgets_1.6.4 DelayedArray_0.28.0 plyr_1.8.9 ## [22] RColorBrewer_1.1-3 abind_1.4-5 BiocParallel_1.36.0 ## [25] withr_3.0.1 purrr_1.0.2 grid_4.3.2 ## [28] fansi_1.0.6 colorspace_2.1-0 scales_1.3.0 ## [31] cli_3.6.3 rmarkdown_2.27 crayon_1.5.3 ## [34] generics_0.1.3 rstudioapi_0.15.0 cachem_1.1.0 ## [37] zlibbioc_1.48.0 parallel_4.3.2 XVector_0.42.0 ## [40] vctrs_0.6.5 Matrix_1.6-4 jsonlite_1.8.8 ## [43] carData_3.0-5 bookdown_0.37 car_3.1-2 ## [46] rstatix_0.7.2 locfit_1.5-9.8 tidyr_1.3.1 ## [49] jquerylib_0.1.4 glue_1.7.0 codetools_0.2-19 ## [52] cowplot_1.1.2 stringi_1.8.4 gtable_0.3.4 ## [55] munsell_0.5.0 tibble_3.2.1 pillar_1.9.0 ## [58] htmltools_0.5.8.1 GenomeInfoDbData_1.2.11 R6_2.5.1 ## [61] evaluate_0.24.0 lattice_0.22-5 highr_0.11 ## [64] backports_1.5.0 broom_1.0.5 bslib_0.8.0 ## [67] Rcpp_1.0.13 zip_2.3.1 SparseArray_1.2.2 ## [70] xfun_0.46 pkgconfig_2.0.3 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
