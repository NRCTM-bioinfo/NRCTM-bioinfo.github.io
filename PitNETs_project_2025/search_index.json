[["index.html", "PitNETs 2025 Chapter 1 Abstract", " PitNETs 2025 Yu-Ting Dai 2025-09-26 Chapter 1 Abstract Abstract Pituitary neuroendocrine tumors (PitNETs) are common intracranial neoplasms arising from anterior pituitary hormone-secreting cells, accounting for about 17% of brain tumors. Functional PitNETs cause systemic endocrine disorders through hormone hypersecretion, while non-functional types often remain silent until mass effects occur. Beyond endocrine dysregulation, PitNETs reshape their immune microenvironment and may influence systemic immunity through tumor-derived cytokines and hormones. Peripheral blood mononuclear cells (PBMCs), as mobile immune sentinels, offer a window into this tumor–host interaction, yet their role in PitNETs remains unclear. To address this, we combined bulk and single-cell RNA sequencing with immune profiling to map the systemic immune impact of PitNETs and identify PBMCs as dynamic biomarkers of disease progression and treatment response. This tutorial provides a step-by-step guide to analyze multi-omics datasets and investigate the systemic immune effects of pituitary neuroendocrine tumors (PitNETs). We integrate bulk RNA-seq (883 tumors, 108 patient PBMCs, 175 healthy controls), single-cell RNA-seq (69 samples from tumors, normal pituitaries, and PBMCs), and clinical data to demonstrate key analysis strategies. This tutorial includes how to process data, characterize immune composition, and identify tumor-immune interactions. Workflow highlights: 1 Differential analysis of PBMCs from PitNET patients and healthy controls. 2 Immune profiling of PitNET vs. normal PBMCs using scRNA-seq and bulk RNA-seq deconvolution. 3 Postoperative monitoring of immune recovery in PitNET patients. 4 Single-cell analysis of PitNET tissues, including cell type annotation and CNV assessment. 5 Characterization of lineage-specific hormone and cytokine secretion profiles and tumor–blood ligand–receptor crosstalk. "],["pitnets.html", "Chapter 2 PitNETs 2.1 RNA-seq data 2.2 PCA 2.3 DEGs 2.4 Enrichment", " Chapter 2 PitNETs 2.1 RNA-seq data The RNA-sequencing expression matrix (FASTQ input) was generated using RSEM (https://deweylab.github.io/RSEM/). #!/bin/bash #SBATCH -p SVC # partition (queue) #SBATCH --job-name=PitNETs #SBATCH -n 40 #SBATCH --array=1 #SBATCH -t 7-00:00 # time (D-HH:MM) #SBATCH -o _log/rsem.%A_%a.out # STDOUT #SBATCH -e _log/rsem.%A_%a.err # STDERR #SBATCH --mail-type=END,FAIL # notifications for job done &amp; fail #SBATCH --mail-user=XX@qq.com # send-to address id=`sed -n ${SLURM_ARRAY_TASK_ID}p sample.txt` echo &quot;${id}&quot; fq_path=${fq_path} fq1=${fq_path}/${id}_R1.fq.gz fq2=${fq_path}/${id}_R2.fq.gz gtf_file=${gtf_file}/gencode.v45.annotation.gtf rsem_path=${rsem_path}/gencode.v45.rsem star_path=${star_path}/star_v45_2.7.11a out_path=${out_path}/rsem_v45 echo ${id} mkdir ${out_path}/${id} STAR --runThreadN 40 --genomeDir ${star_path} \\ --readFilesCommand zcat \\ --readFilesIn ${fq1} ${fq2} \\ --outFileNamePrefix ${out_path}/${id}/${id}. \\ --outSAMtype BAM SortedByCoordinate \\ --outBAMsortingThreadN 40 \\ --quantMode TranscriptomeSAM GeneCounts rsem-calculate-expression --paired-end --no-bam-output \\ --alignments -p 40 \\ -q ${out_path}/${id}/${id}.Aligned.toTranscriptome.out.bam \\ ${rsem_path} \\ ${out_path}/${id}/${id}.rsem 2.2 PCA Setting colors and R libraries. suppressWarnings({ library(openxlsx) library(dplyr) library(DT) library(nlme) library(DESeq2) library(SummarizedExperiment) library(openxlsx) library(stats) library(ggplot2) library(ggpubr) library(limma) library(ggthemes) library(scatterplot3d) library(stringr) }) color.group &lt;- c(G1 = &quot;#ffade7&quot;, G2 = &quot;#ef43c4&quot;, G3 = &quot;#8313bf&quot;, G4 = &quot;#F4D31D&quot;, G5 = &quot;#F4A11D&quot;, G6 = &quot;#68c436&quot;) color.group.nor &lt;- c(G1 = &quot;#ffade7&quot;, G2 = &quot;#ef43c4&quot;, G3 = &quot;#8313bf&quot;, G4 = &quot;#F4D31D&quot;, G5 = &quot;#F4A11D&quot;, G6 = &quot;#68c436&quot;, Normal = &quot;#BBBBBB&quot;) color.group.merge &lt;- c(G1 = &quot;#ffade7&quot;, G2 = &quot;#ef43c4&quot;, G3 = &quot;#8313bf&quot;, G4 = &quot;#F4D31D&quot;, G5 = &quot;#F4A11D&quot;, G6 = &quot;#68c436&quot;, TB = &quot;#e50000&quot;, NB = &quot;#006abc&quot;) color.tissue &lt;- c(Normal_blood = &quot;#006abc&quot;, Tumor_blood = &quot;#e50000&quot;, Tumor = &quot;#ffbd19&quot; ) color.bin &lt;- c(&quot;#D01910&quot;,&quot;#00599F&quot;) color.age &lt;- c(Male = &quot;#f760e8&quot;, Female = &quot;#1fd3a6&quot;) color.lineage &lt;- c(&quot;PIT1&quot; = &quot;#b646f2&quot;, &quot;TPIT&quot; = &quot;#fc6c53&quot;, &quot;SF1&quot; = &quot;#70bf42&quot;, &quot;Null&quot; = &quot;#60caff&quot;) color.lineage.merge &lt;- c(&quot;PIT1&quot; = &quot;#b646f2&quot;, &quot;TPIT&quot; = &quot;#fc6c53&quot;, &quot;SF1&quot; = &quot;#70bf42&quot;, &quot;Null&quot; = &quot;#60caff&quot;, Normal_blood = &quot;#006abc&quot;, Tumor_blood = &quot;#e50000&quot; ) color.hormone &lt;- c(&quot;PRL&quot; = &quot;#cb82f2&quot;, &quot;GH&quot; = &quot;#9a23db&quot;, &quot;ACTH&quot; = &quot;#e0782f&quot;, &quot;NFPA&quot; = &quot;#62aa34&quot;) color.lineage.nor &lt;- c(&quot;PIT1&quot; = &quot;#b646f2&quot;, &quot;TPIT&quot; = &quot;#fc6c53&quot;, &quot;SF1&quot; = &quot;#70bf42&quot;, &quot;Null&quot; = &quot;#60caff&quot;, &quot;Normal&quot; = &quot;#BBBBBB&quot;) color.lib &lt;- c(&quot;#A6761D&quot;, &quot;#A6CEE3&quot;, &quot;#1F78B4&quot;, &quot;#B2DF8A&quot;, &quot;#33A02C&quot;, &quot;#FB9A99&quot;, &quot;#7570B3&quot;, &quot;#E7298A&quot;, &quot;#66A61E&quot;, &quot;#E6AB02&quot;, &quot;#1B9E77&quot;, &quot;#D95F02&quot;, &quot;#E31A1C&quot;, &quot;#FDBF6F&quot;, &quot;#FF7F00&quot;, &quot;#CAB2D6&quot;, &quot;#6A3D9A&quot;, &quot;#F4B3BE&quot;, &quot;#F4A11D&quot;, &quot;#8DC8ED&quot;, &quot;#4C6CB0&quot;, &quot;#8A1C1B&quot;, &quot;#CBCC2B&quot;, &quot;#EA644C&quot;, &quot;#634795&quot;, &quot;#005B1D&quot;, &quot;#26418A&quot;, &quot;#CB8A93&quot;, &quot;#F1E404&quot;, &quot;#E22826&quot;, &quot;#50C1FF&quot;, &quot;#F4D31D&quot;, &quot;#F4A11D&quot;, &quot;#82C800&quot;, &quot;#8B5900&quot;, &quot;#858ED1&quot;, &quot;#FF72E1&quot;, &quot;#CB50B2&quot;, &quot;#007D9B&quot;, &quot;#26418A&quot;, &quot;#8B495F&quot;, &quot;#FF394B&quot;, &quot;#FFDBF7&quot;, &quot;#602B2B&quot;) color.lr &lt;- c( C1 = &quot;#7f006d&quot;, C2 = &quot;#D95F02&quot;, C3 = &quot;#497c0e&quot;, R1 = &quot;#CEC3E0&quot;, R2 = &quot;#ffd35f&quot;, R3 = &quot;#c4ceff&quot;, R4 = &quot;#9987f2&quot;, R5 = &quot;#F0B8D2&quot;, R6 = &quot;#84d7f6&quot;, R7 = &quot;#b6d37f&quot;, R8 = &quot;#5c95e0&quot; ) normal.cutoff.male &lt;- list( Cortisol = c(6.70, 22.60), ACTH = c(7.20, 63.30), T3 = c(0.54, 2.96), T4 = c(62.67, 150.84), TSH = c(0.35, 4.94), PRL = c(3.46, 19.40), E2 = c(10.01, 854.00), GH = c(0.003, 0.971), FT3 = c(2.43, 6.01) ) normal.cutoff.female &lt;- list( Cortisol = c(6.70, 22.60), ACTH = c(7.20, 63.30), T3 = c(0.54, 2.96), T4 = c(62.67, 150.84), TSH = c(0.35, 4.94), PRL = c(5.18, 26.53), E2 = c(10.01, 854.00), GH = c(0.01, 3.61), FT3 = c(2.43, 6.01) ) Run PCA for total samples, including 883 PitNET tissues, 108 PitNET PBMCs and 175 normal PBMCs. exp.merge &lt;- readRDS(&quot;20250925_PitNETs_tissue_PBMC_s1166.rds&quot;) res.pca.comp &lt;- prcomp(exp.merge, scale = TRUE) plot.data &lt;- as.data.frame(res.pca.comp$rotation[, 1:10]) plot.data$SampleID = rownames(plot.data) sum(plot.data$SampleID != meta.data.merge$SampleID) plot.data$GroupHormone &lt;- meta.data.merge$GroupHormone plot.data &lt;- read.xlsx(&quot;data/011.PCA.xlsx&quot;) plot.data$color &lt;- color.tissue[match(plot.data$Tissue, names(color.tissue))] scatterplot3d(x = plot.data$PC3, y = plot.data$PC2, z = plot.data$PC1, color = plot.data$color, pch = 16, cex.symbols = 1, scale.y = 0.7, angle = 45, xlab = &quot;PC3&quot;, ylab = &quot;PC2&quot;, zlab = &quot;PC1&quot;, col.axis = &quot;#444444&quot;, col.grid = &quot;#CCCCCC&quot;) plot.data$color &lt;- color.lineage.merge[match(plot.data$LineageTissue, names(color.lineage.merge))] scatterplot3d(x = plot.data$PC3, y = plot.data$PC2, z = plot.data$PC1, color = plot.data$color, pch = 16, cex.symbols = 1, scale.y = 0.7, angle = 45, xlab = &quot;PC3&quot;, ylab = &quot;PC2&quot;, zlab = &quot;PC1&quot;, col.axis = &quot;#444444&quot;, col.grid = &quot;#CCCCCC&quot;) sub &lt;- c(color.hormone, Normal_blood = &quot;#006abc&quot;, Tumor_blood = &quot;#e50000&quot;) plot.data$color &lt;- sub[match(plot.data$GroupHormone, names(sub))] scatterplot3d(x = plot.data$PC3, y = plot.data$PC2, z = plot.data$PC1, color = plot.data$color, pch = 16, cex.symbols = 1, scale.y = 0.7, angle = 45, xlab = &quot;PC3&quot;, ylab = &quot;PC2&quot;, zlab = &quot;PC1&quot;, col.axis = &quot;#444444&quot;, col.grid = &quot;#CCCCCC&quot;) Run PCA for PBMC samples, including 108 PitNET PBMCs and 175 normal PBMCs. res.pca.comp &lt;- prcomp(exp.merge[, meta.data.merge$SampleID[which(meta.data.merge$Tissue != &quot;Tumor&quot;)]], scale = FALSE) plot.data &lt;- read.xlsx(&quot;data/012.PCA.xlsx&quot;) p &lt;- ggscatter(plot.data, x = &quot;PC1&quot;, y = &quot;PC2&quot;, fill = &quot;Tissue&quot;, color = &quot;Tissue&quot;, size = 1.5, palette = color.tissue, ellipse = T, ellipse.level = 0.8, ellipse.alpha = 0.05, main = &quot;Tissue&quot;, xlab = &quot;PC1&quot;, ylab = &quot;PC2&quot;) + theme_few() p 2.3 DEGs pdata &lt;- meta.data.merge[which(meta.data.merge$Tissue != &quot;Tumor&quot;), ] pdata$contrast &lt;- as.factor(pdata$Tissue) design &lt;- model.matrix(~ 0 + contrast + Gender + Age , data = pdata) colnames(design) &lt;- str_replace_all(colnames(design), fixed(&quot;contrast&quot;), &quot;&quot;) fit &lt;- lmFit(exp.merge[, pdata$SampleID], design) contrast &lt;- makeContrasts(TB_CB = Tumor_blood - Normal_blood, levels = design) fits &lt;- contrasts.fit(fit, contrast) ebFit &lt;- eBayes(fits) deg_sig_list &lt;- topTable(ebFit, coef = 1, adjust.method = &#39;fdr&#39;, number = Inf) deg.data &lt;- deg_sig_list[which(!is.na(deg_sig_list$adj.P.Val)), ] deg.data$logP &lt;- -log10(deg.data$adj.P.Val) deg.data$group = &quot;zz&quot; deg.data$group[which( (deg.data$adj.P.Val &lt; 0.05) &amp; (deg.data$logFC &gt; 0.58) )] = &quot;up&quot; deg.data$group[which( (deg.data$adj.P.Val &lt; 0.05) &amp; (deg.data$logFC &lt; -0.58) )] = &quot;down&quot; table(deg.data$group) deg.data$tag &lt;- paste0(&quot;TB vs NB&quot;) deg.data$Gene &lt;- rownames(deg.data) deg.data$GeneType &lt;- gene.id$V6[match(deg.data$Gene, gene.id$V7)] deg.data &lt;- read.xlsx(&quot;data/013.DEGs.xlsx&quot;, rowNames = T) table(deg.data$group) ## ## down up zz ## 685 322 18163 table(deg.data$group) ## ## down up zz ## 685 322 18163 p &lt;- ggscatter(deg.data, x = &quot;logFC&quot;, y = &quot;logP&quot;, color = &quot;group&quot;, size = 1, main = paste0(&quot;TB vs NB&quot;), xlab = &quot;log2FoldChange&quot;, ylab = &quot;-log10(adjusted P.value)&quot;, palette = c(&quot;#006abc&quot;, &quot;#e50000&quot;, &quot;#BBBBBB&quot;)) p &lt;- p + theme_few() + scale_x_continuous(limits = c(-3.6, 3.6)) p &lt;- p + geom_hline(yintercept = 1.30, linetype=&quot;dashed&quot;, color = &quot;#222222&quot;) p &lt;- p + geom_vline(xintercept = 0.58, linetype=&quot;dashed&quot;, color = &quot;#222222&quot;) p &lt;- p + geom_vline(xintercept = -0.58, linetype=&quot;dashed&quot;, color = &quot;#222222&quot;) p ## Warning: Removed 1 row containing missing values or values outside the scale range (`geom_point()`). 2.4 Enrichment plot.data &lt;- read.xlsx(&quot;data/TableS2.xlsx&quot;, sheet = 2, startRow = 2) plot.data &lt;- plot.data[which(plot.data$Sample == &quot;up in tumor PBMCs&quot;), ] plot.data$LogP &lt;- -log10(plot.data$P.value) p &lt;- ggplot(plot.data, aes(x = Sample, y = Term, color = LogP, size = Count)) + geom_point() p &lt;- p + scale_y_discrete(limits = rev(c(plot.data$Term)) ) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10, color = &quot;black&quot;)) p &lt;- p + xlab(&quot;&quot;) + ylab(&quot;&quot;) p &lt;- p + scale_size(range = c(4, 10), limits = c(5, 30)) p &lt;- p + gradient_color(c(&quot;#FFCC66&quot;,&quot;#ce0000&quot;,&quot;#ce0000&quot;,&quot;#ce0000&quot;,&quot;#ce0000&quot;)) p plot.data &lt;- read.xlsx(&quot;data/TableS2.xlsx&quot;, sheet = 2, startRow = 2) plot.data &lt;- plot.data[which(plot.data$Sample == &quot;down in tumor PBMCs&quot;), ] plot.data$LogP &lt;- -log10(plot.data$P.value) p &lt;- ggplot(plot.data, aes(x = Sample, y = Term, color = LogP, size = Count)) + geom_point() p &lt;- p + scale_y_discrete(limits = rev(c(plot.data$Term)) ) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10, color = &quot;black&quot;)) p &lt;- p + xlab(&quot;&quot;) + ylab(&quot;&quot;) p &lt;- p + scale_size(range = c(4, 10), limits = c(5, 30)) p &lt;- p + gradient_color(c(&quot;#66d9f9&quot;,&quot;#0e6ab5&quot;,&quot;#0e6ab5&quot;,&quot;#0e6ab5&quot;)) p "],["pitnet-pbmc.html", "Chapter 3 PitNET PBMC 3.1 Preprocessing 3.2 Immune signatures 3.3 BRE", " Chapter 3 PitNET PBMC 3.1 Preprocessing The single-cell RNA-seq (scRNA-seq) data were preprocessed using Seurat (https://satijalab.org/seurat/). # Set out path out.path = &quot;&quot; ################################################################################################################ # Analysis and add meta data hypo &lt;- CreateSeuratObject(counts = exp.data, project = &quot;PitNETs&quot;, min.cells = 0, min.features = 0) hypo[[&quot;percent.mt&quot;]] &lt;- PercentageFeatureSet(hypo, pattern = &quot;^MT-&quot;) hypo summary(hypo@meta.data$percent.mt) ############ analysis pdf(paste0(out.path, &quot;/2.filter.vlnplot.pdf&quot;), width = 12, height = 7) VlnPlot(hypo, features = c(&quot;nFeature_RNA&quot;, &quot;nCount_RNA&quot;, &quot;percent.mt&quot;), pt.size = 0, group.by = &quot;Sample&quot;, ncol = 3) dev.off() pdf(paste0(out.path, &quot;/2.filter.geneplot.pdf&quot;), width = 12, height = 7) plot1 &lt;- FeatureScatter(hypo, feature1 = &quot;nCount_RNA&quot;, feature2 = &quot;percent.mt&quot;) plot2 &lt;- FeatureScatter(hypo, feature1 = &quot;nCount_RNA&quot;, feature2 = &quot;nFeature_RNA&quot;) plot1 + plot2 dev.off() hypo &lt;- NormalizeData(hypo, normalization.method = &quot;LogNormalize&quot;, scale.factor = ncol(hypo) ) hypo &lt;- FindVariableFeatures(hypo, selection.method = &quot;vst&quot;, nfeatures = 2000) # Identify the 10 most highly variable genes top10 &lt;- head(VariableFeatures(hypo), 10) length(VariableFeatures(hypo)) # plot variable features with and without labels pdf(paste0(out.path, &quot;/3.VariableFeaturePlot.pdf&quot;), width = 12, height = 7) plot1 &lt;- VariableFeaturePlot(hypo) plot2 &lt;- LabelPoints(plot = plot1, points = top10, repel = TRUE) plot1 + plot2 dev.off() all.genes &lt;- rownames(hypo) hypo &lt;- ScaleData(hypo, features = VariableFeatures(hypo)) hypo &lt;- RunPCA(hypo, features = VariableFeatures(object = hypo)) p &lt;- DimPlot(hypo, reduction = &quot;pca&quot;, group.by = &quot;Sample&quot;, cols = color.lib) + theme_few() ggsave(paste0(out.path, &quot;/4.PCA.pdf&quot;), p, width =11, height = 7) ##################### Harmony for bhypoc length(VariableFeatures(hypo)) hypo &lt;- RunHarmony(hypo, &quot;Sample&quot;, max_iter = 3, sigma = 0.1) hypo &lt;- FindNeighbors(hypo, reduction = &quot;harmony&quot;, dims = 1:20) hypo &lt;- FindClusters(hypo, resolution = 0.8) hypo &lt;- RunUMAP(hypo, reduction = &quot;harmony&quot;, dims = 1:20) set.seed(1) kmeans.cluster &lt;- stats::kmeans(hypo@reductions$harmony@cell.embeddings[, 1:20], centers = 100, iter.max = 100) suhypoary(as.numeric(table(kmeans.cluster$cluster))) hypo$Kmeans &lt;- kmeans.cluster$cluster pt.size = 1 set.raster = TRUE p &lt;- DimPlot(hypo, reduction = &quot;umap&quot;, pt.size = pt.size, raster = set.raster, group.by = &quot;Sample&quot;, cols = color.lib) + theme_few() ggsave(paste0(out.path, &quot;/5.UMAP.sample.pdf&quot;), p, width = 11, height = 7) p &lt;- DimPlot(hypo, reduction = &quot;umap&quot;, pt.size = pt.size, raster = set.raster, label = T, label.size = 5, group.by = &quot;seurat_clusters&quot;, cols = color.lib) + theme_few() ggsave(paste0(out.path, &quot;/5.UMAP.cluster.pdf&quot;), p, width = 9, height = 7) p &lt;- DimPlot(hypo, reduction = &quot;umap&quot;, pt.size = pt.size, raster = set.raster, label = T, label.size = 3, group.by = &quot;Kmeans&quot;) + theme_few() ggsave(paste0(out.path, &quot;/5.UMAP.kmeans.pdf&quot;), p, width = 9, height = 7) p &lt;- DimPlot(hypo, reduction = &quot;umap&quot;, pt.size = pt.size, raster = set.raster, group.by = &quot;seurat_clusters&quot;, split.by = &quot;Sample&quot;, cols = color.lib, ncol = 7) + theme_few() ggsave(paste0(out.path, &quot;/5.UMAP.cluster.s.pdf&quot;), p, width = 30, height = 13) p &lt;- DimPlot(hypo, reduction = &quot;umap&quot;, pt.size = pt.size, raster = set.raster, group.by = &quot;Sample&quot;, cols = color.lib) + theme_few() ggsave(paste0(out.path, &quot;/5.UMAP.sample.pdf&quot;), p, width = 11, height = 7) p &lt;- DimPlot(hypo, reduction = &quot;umap&quot;, pt.size = pt.size, raster = set.raster, label = T, label.size = 5, group.by = &quot;Tissue&quot;, cols = color.lib) + theme_few() ggsave(paste0(out.path, &quot;/5.UMAP.Tissue.pdf&quot;), p, width = 9, height = 7) p &lt;- FeaturePlot(object = hypo, features = c(&quot;AVP&quot;,&quot;CD34&quot;,&quot;CD38&quot;,&quot;SDC1&quot;,&quot;CD19&quot;,&quot;CD79A&quot;,&quot;TNFRSF11A&quot;,&quot;CD4&quot;,&quot;CD8A&quot;), cols = c(&quot;#CCCCCC&quot;, &quot;red&quot;), pt.size = 0.5, raster = TRUE, ncol = 3, reduction = &quot;umap&quot;) ggsave(paste0(out.path, &quot;/5.cell.marker_Lin.pdf&quot;), p, width = 14, height = 12) p &lt;- FeaturePlot(object = hypo, features = c(&quot;CD14&quot;,&quot;FCGR3A&quot;,&quot;CD1C&quot;,&quot;IL3RA&quot;,&quot;IRF4&quot;,&quot;C1QA&quot;,&quot;FCGR3B&quot;,&quot;S100A8&quot;,&quot;S100A9&quot;), cols = c(&quot;#CCCCCC&quot;, &quot;red&quot;), pt.size = 0.5, raster = TRUE, ncol = 3, reduction = &quot;umap&quot;) ggsave(paste0(out.path, &quot;/5.cell.marker_Mye.pdf&quot;), p, width = 14, height = 12) p &lt;- FeaturePlot(object = hypo, features = c(&quot;CD4&quot;,&quot;CD8A&quot;,&quot;CCR7&quot;,&quot;FOXP3&quot;,&quot;IL7R&quot;,&quot;CD40LG&quot;,&quot;FGFBP2&quot;,&quot;NCAM1&quot;,&quot;XCL1&quot;), cols = c(&quot;#CCCCCC&quot;, &quot;red&quot;), pt.size = 0.5, raster = TRUE, ncol = 3, reduction = &quot;umap&quot;) ggsave(paste0(out.path, &quot;/5.cell.marker_NKT.pdf&quot;), p, width = 14, height = 12) p &lt;- FeaturePlot(object = hypo, features = c(&quot;POU1F1&quot;,&quot;TBX19&quot;,&quot;NR5A1&quot;,&quot;PRL&quot;,&quot;PRLR&quot;,&quot;GATA3&quot;,&quot;GATA2&quot;,&quot;GZMH&quot;,&quot;GZMK&quot;), cols = c(&quot;#CCCCCC&quot;, &quot;red&quot;), pt.size = 0.5, raster = TRUE, ncol = 3, reduction = &quot;umap&quot;) ggsave(paste0(out.path, &quot;/5.cell.marker_Pit.pdf&quot;), p, width = 14, height = 12) out.meta &lt;- as.data.frame(table(hypo$Sample)) write.xlsx(out.meta, paste0(out.path, &quot;/1.CellCount.xlsx&quot;), overwrite = T) saveRDS(hypo, &quot;obj/PitNETs.rds&quot;) 3.2 Immune signatures marker.scell.anno &lt;- read.xlsx(&quot;Top.markers.CellTypeAnno.xlsx&quot;) plot.cell &lt;- unique(marker.scell.anno$cluster) plot.cell &lt;- plot.cell[! plot.cell %in% c(&quot;Undefine&quot;) ] marker.scell.anno.list &lt;- list() for (i in 1:length(plot.cell)) { sub &lt;- marker.scell.anno[which(marker.scell.anno$cluster == plot.cell[i]), ] sub &lt;- sub[which(sub$p_val_adj &lt; 0.0001), ] sub &lt;- sub[sub$gene %in% gene.scell.enroll$V6, ] sub &lt;- sub[order(sub$avg_log2FC, decreasing = T), ] if (nrow(sub) &gt; 200) sub &lt;- head(sub, 200) marker.scell.anno.list &lt;- c(marker.scell.anno.list, list(sub = sub$gene)) } names(marker.scell.anno.list) &lt;- plot.cell for (i in 1:length(marker.scell.anno.list)) message(i, &quot; &quot;, names(marker.scell.anno.list)[i], &quot; &quot;, length(marker.scell.anno.list[[i]]) ) ssgsea.mat &lt;- gsva(as.matrix(exp.merge.all), marker.scell.anno.list, method=&#39;ssgsea&#39;, kcdf=&#39;Gaussian&#39;, abs.ranking=FALSE) plot.mat &lt;- readRDS(&quot;data/021.ssgsea.rds&quot;) meta.data.merge &lt;- read.xlsx(&quot;data/022.meta.data.xlsx&quot;) plot.data &lt;- data.frame(Cell = rownames(plot.mat), FC = 0, P.wilcox = NA) for (i in 1:nrow(plot.mat)) { sub.1 &lt;- meta.data.merge$SampleID[which(meta.data.merge$LineageTissue == &quot;Tumor_blood&quot;)] sub.2 &lt;- meta.data.merge$SampleID[which(meta.data.merge$LineageTissue == &quot;Normal_blood&quot;)] plot.data$FC[i] &lt;- mean(plot.mat[i, sub.1]) - mean(plot.mat[i, sub.2]) plot.data$P.wilcox[i] &lt;- wilcox.test(plot.mat[i, sub.1], plot.mat[i, sub.2])$p.value } plot.data$Padj &lt;- p.adjust(plot.data$P.wilcox, method = &quot;fdr&quot;) plot.data$logFDR &lt;- -log10(plot.data$Padj) plot.data$Type &lt;- &quot;not-sig&quot; plot.data$Type[which(plot.data$FC &gt; 0 &amp; plot.data$Padj &lt; 0.05)] &lt;- &quot;up&quot; plot.data$Type[which(plot.data$FC &lt; -0 &amp; plot.data$Padj &lt; 0.05)] &lt;- &quot;down&quot; plot.data.sub &lt;- plot.data[! plot.data$Cell %in% c(&quot;Undefine&quot;,&quot;platelet&quot;,&quot;Eosinophil&quot;,&quot;HSPC&quot;), ] plot.data.sub &lt;- plot.data.sub[order(plot.data.sub$FC, decreasing = T) , ] plot.data.sub$Label = plot.data.sub$Cell plot.data.sub$Label[which(plot.data.sub$Type == &quot;not-sig&quot;)] = &quot;&quot; p &lt;- ggscatter(plot.data.sub, x = &quot;FC&quot;, y = &quot;logFDR&quot;, color = &quot;Type&quot;, size = 4, repel = T, palette = c(up = &quot;#D01910&quot;, down = &quot;#00599F&quot;, zz = &quot;#CCCCCC&quot;), main = &quot;PBMC-cell&quot;, label = plot.data.sub$Label, font.label = 8, xlab = &quot;Fold change&quot;, ylab = &quot;-log10(adj P)&quot;) + theme_few() p &lt;- p + geom_hline(yintercept = 1.30, linetype=&quot;dashed&quot;, color = &quot;#222222&quot;) p &lt;- p + scale_x_continuous(limits = c(-0.09, 0.09)) p &lt;- p + geom_vline(xintercept = c(-0), linetype=&quot;dashed&quot;, color = &quot;#222222&quot;) p ## Warning: No shared levels found between `names(values)` of the manual scale and the data&#39;s fill values. plot.data &lt;- meta.data.merge[meta.data.merge$Tissue != &quot;Tumor&quot;, ] table(plot.data$GroupHormone) ## ## ACTH GH NFPA Normal PRL ## 4 10 41 175 53 plot.info &lt;- NULL for (i in 1:nrow(plot.mat)) { plot.data$Plot &lt;- as.numeric(plot.mat[i, plot.data$SampleID]) plot.data$PlotDiff &lt;- plot.data$Plot - mean(plot.data$Plot[which(plot.data$LineageTissue == &quot;Normal_blood&quot;)]) plot.data$CellType &lt;- rownames(plot.mat)[i] plot.info &lt;- rbind(plot.info, plot.data) } plot.info &lt;- plot.info[! plot.info$CellType %in% c(&quot;Neutrophil&quot;,&quot;Eosinophil&quot;,&quot;HSPC&quot;,&quot;platelet&quot;), ] plot.info$GroupHormone &lt;- factor(as.character(plot.info$GroupHormone), levels = rev(c(&quot;Normal&quot;,&quot;PRL&quot;,&quot;GH&quot;,&quot;ACTH&quot;,&quot;NFPA&quot;))) p &lt;- ggbarplot(plot.info, x = &quot;CellType&quot;, y = &quot;PlotDiff&quot;, color = &quot;GroupHormone&quot;, fill = &quot;GroupHormone&quot;, palette = c(&quot;Normal&quot; = &quot;#006abc&quot;, color.hormone), order = rev(c(&quot;CD4T_naive&quot;,&quot;CD4T_Tem&quot;,&quot;CD4T_Treg&quot;,&quot;CD8T_naive&quot;,&quot;CD8T_Tm&quot;,&quot;CD8T_Tem&quot;,&quot;NKcell&quot;,&quot;B_cell&quot;,&quot;Monocyte_CD14&quot;,&quot;Monocyte_CD16&quot;,&quot;cDC&quot;,&quot;pDC&quot;)), main = &quot;PBMC&quot;, width = 0.7, position = position_dodge(0.8), add = c(&quot;mean_se&quot;), add.params = list(width = 0.5), xlab = &quot;&quot;, ylab = paste0(&quot;Cell abundance&quot;), legend = &quot;bottom&quot;) p &lt;- p + stat_compare_means(aes(group = GroupHormone, label = paste0(..p.format..)), method = &quot;anova&quot; ) p &lt;- p + theme_base() + theme(plot.background = element_blank()) + coord_flip() p &lt;- p + theme(axis.text.x = element_text(angle = 90,hjust = 1,vjust = 0.5)) p 3.3 BRE plot.data &lt;- read.xlsx(&quot;data/TableS4.xlsx&quot;, startRow = 2) colnames(plot.data) &lt;- str_replace_all(colnames(plot.data), regex(&quot;.\\\\(.+&quot;), &quot;&quot;) colnames(plot.data) &lt;- str_replace_all(colnames(plot.data), regex(&quot;/&quot;), &quot;_&quot;) p &lt;- ggboxplot(plot.data, x = &quot;Disease&quot;, y = &quot;Lymphocyte.count&quot;, color = &quot;black&quot;, fill = &quot;white&quot;, palette = c(&quot;#006abc&quot;,&quot;#e50000&quot;), order = c(&quot;Normal&quot;, &quot;PitNETs&quot;), width = 0.6, bxp.errorbar = TRUE, bxp.errorbar.width = 0.5, add = &quot;jitter&quot;, add.param = list(color = &quot;Disease&quot;, size = 1, width = 0.5), xlab = &quot;&quot;, ylab = paste0( &quot;Lymphocyte.count&quot; ), main = paste0( &quot;Lymphocyte.count&quot; ), legend = &quot;bottom&quot; ) p &lt;- p + stat_compare_means(method = &quot;wilcox.test&quot;) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p p &lt;- ggboxplot(plot.data, x = &quot;Disease&quot;, y = &quot;Monocyte.count&quot;, color = &quot;black&quot;, fill = &quot;white&quot;, palette = c(&quot;#006abc&quot;,&quot;#e50000&quot;), order = c(&quot;Normal&quot;, &quot;PitNETs&quot;), width = 0.6, bxp.errorbar = TRUE, bxp.errorbar.width = 0.5, add = &quot;jitter&quot;, add.param = list(color = &quot;Disease&quot;, size = 1, width = 0.5), xlab = &quot;&quot;, ylab = paste0( &quot;Monocyte.count&quot; ), main = paste0( &quot;Monocyte.count&quot; ), legend = &quot;bottom&quot; ) p &lt;- p + stat_compare_means(method = &quot;wilcox.test&quot;) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p p &lt;- ggboxplot(plot.data, x = &quot;Disease&quot;, y = &quot;Lymphocyte._.Monocyte.ratio&quot;, color = &quot;black&quot;, fill = &quot;white&quot;, palette = c(&quot;#006abc&quot;,&quot;#e50000&quot;), order = c(&quot;Normal&quot;, &quot;PitNETs&quot;), width = 0.6, bxp.errorbar = TRUE, bxp.errorbar.width = 0.5, add = &quot;jitter&quot;, add.param = list(color = &quot;Disease&quot;, size = 1, width = 0.5), xlab = &quot;&quot;, ylab = paste0( &quot;Lymphocyte / Monocyte ratio&quot; ), main = paste0( &quot;Lymphocyte/ Monocyte ratio&quot; ), legend = &quot;bottom&quot; ) p &lt;- p + stat_compare_means(method = &quot;wilcox.test&quot;) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p p &lt;- ggboxplot(plot.data, x = &quot;Disease&quot;, y = &quot;Neutrophil.count&quot;, color = &quot;black&quot;, fill = &quot;white&quot;, palette = c(&quot;#006abc&quot;,&quot;#e50000&quot;), order = c(&quot;Normal&quot;, &quot;PitNETs&quot;), width = 0.6, bxp.errorbar = TRUE, bxp.errorbar.width = 0.5, add = &quot;jitter&quot;, add.param = list(color = &quot;Disease&quot;, size = 1, width = 0.5), xlab = &quot;&quot;, ylab = paste0( &quot;Neutrophil.count&quot; ), main = paste0( &quot;Neutrophil.count&quot; ), legend = &quot;bottom&quot; ) p &lt;- p + stat_compare_means(method = &quot;wilcox.test&quot;) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p p &lt;- ggboxplot(plot.data, x = &quot;Disease&quot;, y = &quot;Neutrophil.percentage&quot;, color = &quot;black&quot;, fill = &quot;white&quot;, palette = c(&quot;#006abc&quot;,&quot;#e50000&quot;), order = c(&quot;Normal&quot;, &quot;PitNETs&quot;), width = 0.6, bxp.errorbar = TRUE, bxp.errorbar.width = 0.5, add = &quot;jitter&quot;, add.param = list(color = &quot;Disease&quot;, size = 1, width = 0.5), xlab = &quot;&quot;, ylab = paste0( &quot;Neutrophil.percentage&quot; ), main = paste0( &quot;Neutrophil.percentage&quot; ), legend = &quot;bottom&quot; ) p &lt;- p + stat_compare_means(method = &quot;wilcox.test&quot;) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p "],["post-surgery.html", "Chapter 4 Post-surgery 4.1 BRE 4.2 PitNET tissue 4.3 scRNA-seq 4.4 inferCNV", " Chapter 4 Post-surgery 4.1 BRE plot.info &lt;- read.xlsx(&quot;data/TableS6.xlsx&quot;, startRow = 3) colnames(plot.info)[1:3] &lt;- c(&quot;Sample&quot;,&quot;Disease&quot;,&quot;GroupHormone&quot;) colnames(plot.info) &lt;- str_replace_all(colnames(plot.info), regex(&quot;.\\\\(.+&quot;), &quot;&quot;) colnames(plot.info) &lt;- str_replace_all(colnames(plot.info), regex(&quot;/&quot;), &quot;_&quot;) sub.1 &lt;- plot.info[, c(1:3, 19, 4:18)] sub.1$Group &lt;- &quot;Before&quot; sub.2 &lt;- plot.info[, c(1:3, 19, 20:34)] sub.2$Group &lt;- &quot;After&quot; plot.data &lt;- rbind(sub.1, sub.2) plot.data$Group &lt;- factor(plot.data$Group, levels = c(&quot;Before&quot;,&quot;After&quot;) ) plot.data$Time &lt;- factor(as.character(plot.data$Time), levels = c(&quot;day2&quot;,&quot;day3&quot;,&quot;day4&quot;,&quot;day5&quot;,&quot;day6&quot;,&quot;day30&quot;)) table(plot.data$Time) ## ## day2 day3 day4 day5 day6 day30 ## 44 82 62 34 126 52 p &lt;- ggboxplot(plot.data, x = &quot;GroupHormone&quot;, y = &quot;Lymphocyte._.Monocyte.ratio&quot;, color = &quot;Group&quot;, fill = &quot;white&quot;, palette = c(&quot;#CE0000&quot;,&quot;#ffaa00&quot;), order = names(color.hormone), width = 0.6, bxp.errorbar = TRUE, bxp.errorbar.width = 0.5, add = &quot;jitter&quot;, add.param = list(color = &quot;Group&quot;, size = 1, width = 0.5), xlab = &quot;&quot;, ylab = paste0( &quot;Lymphocyte / Monocyte ratio&quot; ), main = paste0( &quot;Lymphocyte / Monocyte ratio&quot; ), legend = &quot;bottom&quot; ) p &lt;- p + stat_compare_means(aes(group = Group, label = paste0(..p.format..)), method = &quot;wilcox.test&quot;, paired = T, size = 2 ) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p p &lt;- ggboxplot(plot.data, x = &quot;Time&quot;, y = &quot;Lymphocyte.count&quot;, color = &quot;Group&quot;, fill = &quot;white&quot;, palette = c(&quot;#CE0000&quot;,&quot;#ffaa00&quot;), width = 0.6, bxp.errorbar = TRUE, bxp.errorbar.width = 0.5, add = &quot;jitter&quot;, add.param = list(color = &quot;Group&quot;, size = 1, width = 0.5), xlab = &quot;&quot;, ylab = paste0( &quot;Lymphocyte.count&quot; ), main = paste0( &quot;Lymphocyte.count&quot; ), legend = &quot;bottom&quot; ) p &lt;- p + stat_compare_means(aes(group = Group, label = paste0(..p.format..)), method = &quot;wilcox.test&quot;, size = 2 ) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p p &lt;- ggboxplot(plot.data, x = &quot;Time&quot;, y = &quot;Monocyte.count&quot;, color = &quot;Group&quot;, fill = &quot;white&quot;, palette = c(&quot;#CE0000&quot;,&quot;#ffaa00&quot;), width = 0.6, bxp.errorbar = TRUE, bxp.errorbar.width = 0.5, add = &quot;jitter&quot;, add.param = list(color = &quot;Group&quot;, size = 1, width = 0.5), xlab = &quot;&quot;, ylab = paste0( &quot;Monocyte.count&quot; ), main = paste0( &quot;Monocyte.count&quot; ), legend = &quot;bottom&quot; ) p &lt;- p + stat_compare_means(aes(group = Group, label = paste0(..p.format..)), method = &quot;wilcox.test&quot;, size = 2 ) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p p &lt;- ggboxplot(plot.data, x = &quot;Time&quot;, y = &quot;Lymphocyte._.Monocyte.ratio&quot;, color = &quot;Group&quot;, fill = &quot;white&quot;, palette = c(&quot;#CE0000&quot;,&quot;#ffaa00&quot;), width = 0.6, bxp.errorbar = TRUE, bxp.errorbar.width = 0.5, add = &quot;jitter&quot;, add.param = list(color = &quot;Group&quot;, size = 1, width = 0.5), xlab = &quot;&quot;, ylab = paste0( &quot;Lymphocyte / Monocyte ratio&quot; ), main = paste0( &quot;Lymphocyte / Monocyte ratio&quot; ), legend = &quot;bottom&quot; ) p &lt;- p + stat_compare_means(aes(group = Group, label = paste0(..p.format..)), method = &quot;wilcox.test&quot;, size = 2 ) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p sub &lt;- plot.data[which(!is.na(plot.data[, &quot;PRL&quot; ])), ] sub.1 &lt;- table(sub$Sample) sub.1 &lt;- sub.1[sub.1 &gt; 1] plot.data.sub &lt;- plot.data[plot.data$Sample %in% names(sub.1), ] table(plot.data.sub$Time)/2 ## ## day2 day3 day4 day5 day6 day30 ## 15 37 30 17 55 20 p &lt;- ggboxplot(plot.data.sub, x = &quot;Time&quot;, y = &quot;PRL&quot;, color = &quot;Group&quot;, fill = &quot;white&quot;, palette = c(&quot;#CE0000&quot;,&quot;#ffaa00&quot;), #order = c(&quot;FirstVisit&quot;, &quot;LastVisit&quot;), width = 0.6, bxp.errorbar = TRUE, bxp.errorbar.width = 0.5, add = &quot;jitter&quot;, add.param = list(color = &quot;Group&quot;, size = 1, width = 0.5), xlab = &quot;&quot;, ylab = paste0( &quot;PRL&quot; ), main = paste0( &quot;PRL&quot; ), legend = &quot;bottom&quot; ) p &lt;- p + stat_compare_means(aes(group = Group, label = paste0(..p.format..)), method = &quot;wilcox.test&quot;, paired = T, size = 2 ) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + geom_hline(yintercept = normal.cutoff.male$PRL, linetype=&quot;dashed&quot;, color = &quot;blue&quot;) p &lt;- p + geom_hline(yintercept = normal.cutoff.female$PRL, linetype=&quot;dashed&quot;, color = &quot;red&quot;) p sub &lt;- plot.data[which(!is.na(plot.data[, &quot;GH&quot; ])), ] sub.1 &lt;- table(sub$Sample) sub.1 &lt;- sub.1[sub.1 &gt; 1] plot.data.sub &lt;- plot.data[plot.data$Sample %in% names(sub.1), ] table(plot.data.sub$Time)/2 ## ## day2 day3 day4 day5 day6 day30 ## 15 37 30 17 55 20 p &lt;- ggboxplot(plot.data.sub, x = &quot;Time&quot;, y = &quot;GH&quot;, color = &quot;Group&quot;, fill = &quot;white&quot;, palette = c(&quot;#CE0000&quot;,&quot;#ffaa00&quot;), #order = c(&quot;FirstVisit&quot;, &quot;LastVisit&quot;), width = 0.6, bxp.errorbar = TRUE, bxp.errorbar.width = 0.5, add = &quot;jitter&quot;, add.param = list(color = &quot;Group&quot;, size = 1, width = 0.5), xlab = &quot;&quot;, ylab = paste0( &quot;GH&quot; ), main = paste0( &quot;GH&quot; ), legend = &quot;bottom&quot; ) p &lt;- p + stat_compare_means(aes(group = Group, label = paste0(..p.format..)), method = &quot;wilcox.test&quot;, paired = T, size = 2 ) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + geom_hline(yintercept = normal.cutoff.male$GH, linetype=&quot;dashed&quot;, color = &quot;blue&quot;) p &lt;- p + geom_hline(yintercept = normal.cutoff.female$GH, linetype=&quot;dashed&quot;, color = &quot;red&quot;) p sub &lt;- plot.data[which(!is.na(plot.data[, &quot;ACTH&quot; ])), ] sub.1 &lt;- table(sub$Sample) sub.1 &lt;- sub.1[sub.1 &gt; 1] plot.data.sub &lt;- plot.data[plot.data$Sample %in% names(sub.1), ] table(plot.data.sub$Time)/2 ## ## day2 day3 day4 day5 day6 day30 ## 15 37 30 17 55 20 p &lt;- ggboxplot(plot.data.sub, x = &quot;Time&quot;, y = &quot;ACTH&quot;, color = &quot;Group&quot;, fill = &quot;white&quot;, palette = c(&quot;#CE0000&quot;,&quot;#ffaa00&quot;), #order = c(&quot;FirstVisit&quot;, &quot;LastVisit&quot;), width = 0.6, bxp.errorbar = TRUE, bxp.errorbar.width = 0.5, add = &quot;jitter&quot;, add.param = list(color = &quot;Group&quot;, size = 1, width = 0.5), xlab = &quot;&quot;, ylab = paste0( &quot;ACTH&quot; ), main = paste0( &quot;ACTH&quot; ), legend = &quot;bottom&quot; ) p &lt;- p + stat_compare_means(aes(group = Group, label = paste0(..p.format..)), method = &quot;wilcox.test&quot;, paired = T, size = 2 ) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + geom_hline(yintercept = normal.cutoff.male$ACTH, linetype=&quot;dashed&quot;, color = &quot;blue&quot;) p &lt;- p + geom_hline(yintercept = normal.cutoff.female$ACTH, linetype=&quot;dashed&quot;, color = &quot;red&quot;) p 4.2 PitNET tissue 4.3 scRNA-seq hypo &lt;- readRDS(&quot;data/20250925_PitNETs_scRNA_tissue_s63.rds&quot;) p &lt;- DimPlot(hypo, reduction = &quot;umap&quot;, pt.size = pt.size, raster = set.raster, label = T, label.size = 4, group.by = &quot;Sample&quot;, cols = color.lib, shuffle = T) + theme_few() ggsave(paste0(out.path, &quot;/5.UMAP.sample.png&quot;), p, width = 11, height = 7, dpi = 300) p &lt;- DimPlot(hypo, reduction = &quot;umap&quot;, pt.size = pt.size, raster = set.raster, label = T, label.size = 3, group.by = &quot;CellType&quot;, cols = color.tumor) + theme_few() ggsave(paste0(out.path, &quot;/5.UMAP.CellType.png&quot;), p, width = 10, height = 7, dpi = 300) p &lt;- DimPlot(hypo, reduction = &quot;umap&quot;, pt.size = pt.size, raster = set.raster, label = T, label.size = 4, group.by = &quot;Branch&quot;, cols = color.branch) + theme_few() ggsave(paste0(out.path, &quot;/5.UMAP.Branch.png&quot;), p, width = 8.5, height = 7, dpi = 300) 4.4 inferCNV infercnv_obj &lt;- infercnv::CreateInfercnvObject(raw_counts_matrix=count.cnv, gene_order_file=genes.cnv, annotations_file=annot.cnv, ref_group_names = rev(c(&quot;Normal_cell&quot;)) ) infercnv_obj_default = infercnv::run( infercnv_obj, cutoff=0.1, # cutoff=1 works well for Smart-seq2, and cutoff=0.1 works well for 10x Genomics out_dir=out.path.cnv, cluster_by_groups=TRUE, plot_steps=FALSE, denoise=TRUE, HMM=FALSE, no_prelim_plot=FALSE, png_res=300, output_format = &quot;pdf&quot; ) saveRDS(infercnv_obj, file = paste0(out.path.cnv, &quot;/infercnv.CNV.obj.rds&quot;)) "],["l-r-net.html", "Chapter 5 L-R net 5.1 Ligand clusters 5.2 Receptor", " Chapter 5 L-R net 5.1 Ligand clusters node.data &lt;- read.xlsx(&quot;data/node.data.xlsx&quot;) edge.data &lt;- read.xlsx(&quot;data/edge.data.xlsx&quot;) mat.receptor &lt;- readRDS(&quot;data/mat.receptor.rds&quot;) mat.ligand &lt;- readRDS(&quot;data/mat.ligand.rds&quot;) gg &lt;- ggplot() gg &lt;- gg + geom_segment(mapping = aes(x = from.x, y = from.y, xend = to.x, yend = to.y), color = &quot;#CCCCCC&quot;, size = 0.05, data = edge.data) gg &lt;- gg + geom_point(mapping = aes(x = pos.x, y = pos.y, color = Cluster), size = 2, shape = 18, data = node.data[which(node.data$Type == &quot;Receptor&quot;), ]) gg &lt;- gg + geom_point(mapping = aes(x = pos.x, y = pos.y, color = Cluster), size = 3, shape = 16, data = node.data[which(node.data$Type == &quot;Ligand&quot;), ]) gg &lt;- gg + scale_size(range = c(0, 6) * 2) gg &lt;- gg + theme_void() gg &lt;- gg + labs(x = &quot;&quot;, y = &quot;&quot;, title = paste0(&quot;PPI&quot;)) gg &lt;- gg + scale_colour_manual(values = c(color.lr)) gg 5.2 Receptor plot.mat &lt;- mat.receptor[node.data$Gene[which(node.data$Type == &quot;Receptor&quot;) ], ] plot.mat &lt;- t(scale(t(plot.mat))) plot.cell &lt;- c(&quot;TB-CD4T_naive&quot;,&quot;TB-CD4T_Tem&quot;,&quot;TB-CD4T_Treg&quot;,&quot;TB-CD8T_naive&quot;,&quot;TB-CD8T_Tm&quot;, &quot;TB-CD8T_Tem&quot;,&quot;TB-NKcell&quot;,&quot;TB-B_cell&quot;,&quot;TB-pDC&quot;,&quot;TB-Monocyte_CD14&quot;) plot.total.edge &lt;- NULL plot.total.node &lt;- NULL for (i in 1:length(plot.cell)) { sub.1 &lt;- edge.data sub.1$Group &lt;- plot.cell[i] sub.2 &lt;- node.data sub.2$Group &lt;- plot.cell[i] sub.2$ReceptorExp &lt;- plot.mat[match(sub.2$Gene, rownames(plot.mat)), plot.cell[i]] sub.2 &lt;- sub.2[order(sub.2$ReceptorExp), ] plot.total.edge &lt;- rbind(plot.total.edge, sub.1) plot.total.node &lt;- rbind(plot.total.node, sub.2) } plot.total.node$ReceptorExpMod &lt;- plot.total.node$ReceptorExp plot.total.node$ReceptorExpMod[which(plot.total.node$ReceptorExp &gt; 2)] = 2 plot.total.node$ReceptorExpMod[which(plot.total.node$ReceptorExp &lt; -2)] = -2 plot.total.node$Group &lt;- factor(as.character(plot.total.node$Group), levels = plot.cell) plot.total.edge$Group &lt;- factor(as.character(plot.total.edge$Group), levels = plot.cell) gg &lt;- ggplot() gg &lt;- gg + geom_segment(mapping = aes(x = from.x, y = from.y, xend = to.x, yend = to.y), color = &quot;#CCCCCC&quot;, size = 0.05, data = plot.total.edge) gg &lt;- gg + geom_point(mapping = aes(x = pos.x, y = pos.y), color = &quot;#CCCCCC&quot;, size = 0.2, shape = 16, data = plot.total.node[which(plot.total.node$Type == &quot;Ligand&quot;), ]) gg &lt;- gg + geom_point(mapping = aes(x = pos.x, y = pos.y, color = ReceptorExpMod), size = 2, shape = 18, data = plot.total.node[which(plot.total.node$Type == &quot;Receptor&quot;), ]) gg &lt;- gg + theme_void() + facet_wrap(~ Group, ncol = 5) gg &lt;- gg + labs(x = &quot;&quot;, y = &quot;&quot;, title = paste0(&quot;PPI&quot;)) gg &lt;- gg +scale_colour_gradientn(colors = c(&quot;#00408e&quot;, &quot;#007ed8&quot;,&quot;#62aee5&quot;,&quot;#a8dcff&quot;, &quot;#fffef3&quot;, &quot;#ffca79&quot;,&quot;#e5524c&quot;,&quot;#c52f4e&quot;, &quot;#D01910&quot;)) gg "],["about-pitnets-2025.html", "Chapter 6 About PitNETs 2025 Current version Session Information", " Chapter 6 About PitNETs 2025 Current version Version: 1.1.0 Release Date: 2025-09-26 Session Information # Show session information sessionInfo() ## R version 4.3.2 (2023-10-31) ## Platform: x86_64-apple-darwin20 (64-bit) ## Running under: macOS 15.6.1 ## ## Matrix products: default ## BLAS: /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib; LAPACK version 3.11.0 ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## time zone: Asia/Shanghai ## tzcode source: internal ## ## attached base packages: ## [1] stats4 stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] stringr_1.5.1 scatterplot3d_0.3-44 ggthemes_5.1.0 limma_3.58.1 ## [5] ggpubr_0.6.1 ggplot2_3.5.2 DESeq2_1.42.0 SummarizedExperiment_1.32.0 ## [9] Biobase_2.62.0 MatrixGenerics_1.14.0 matrixStats_1.5.0 GenomicRanges_1.54.1 ## [13] GenomeInfoDb_1.38.1 IRanges_2.36.0 S4Vectors_0.40.2 BiocGenerics_0.48.1 ## [17] nlme_3.1-168 DT_0.33 dplyr_1.1.4 openxlsx_4.2.8 ## ## loaded via a namespace (and not attached): ## [1] tidyselect_1.2.1 farver_2.1.2 bitops_1.0-9 fastmap_1.2.0 ## [5] RCurl_1.98-1.17 digest_0.6.37 lifecycle_1.0.4 statmod_1.5.0 ## [9] magrittr_2.0.3 compiler_4.3.2 rlang_1.1.6 sass_0.4.10 ## [13] tools_4.3.2 yaml_2.3.10 knitr_1.50 ggsignif_0.6.4 ## [17] S4Arrays_1.2.0 labeling_0.4.3 htmlwidgets_1.6.4 DelayedArray_0.28.0 ## [21] RColorBrewer_1.1-3 abind_1.4-8 BiocParallel_1.36.0 withr_3.0.2 ## [25] purrr_1.1.0 grid_4.3.2 colorspace_2.1-1 scales_1.4.0 ## [29] dichromat_2.0-0.1 cli_3.6.5 rmarkdown_2.29 crayon_1.5.3 ## [33] generics_0.1.4 rstudioapi_0.17.1 cachem_1.1.0 zlibbioc_1.48.2 ## [37] parallel_4.3.2 XVector_0.42.0 vctrs_0.6.5 Matrix_1.6-4 ## [41] jsonlite_2.0.0 carData_3.0-5 bookdown_0.43 car_3.1-3 ## [45] rstatix_0.7.2 ggrepel_0.9.6 Formula_1.2-5 locfit_1.5-9.12 ## [49] jquerylib_0.1.4 tidyr_1.3.1 glue_1.8.0 codetools_0.2-20 ## [53] stringi_1.8.7 gtable_0.3.6 tibble_3.3.0 pillar_1.11.0 ## [57] htmltools_0.5.8.1 GenomeInfoDbData_1.2.11 R6_2.6.1 evaluate_1.0.4 ## [61] lattice_0.22-7 backports_1.5.0 broom_1.0.8 bslib_0.9.0 ## [65] Rcpp_1.1.0 zip_2.3.3 SparseArray_1.2.2 xfun_0.52 ## [69] pkgconfig_2.0.3 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
