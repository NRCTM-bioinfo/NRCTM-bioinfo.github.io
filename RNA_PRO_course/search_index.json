[["index.html", "生信分析系列培训课程（第3期） Chapter 1 About", " 生信分析系列培训课程（第3期） Chenxu Gao 2023-12-06 Chapter 1 About 转化中心生信大数据平台内部资料，请勿外传，谢谢！ "],["install-r-packages.html", "Chapter 2 install R packages", " Chapter 2 install R packages 安装RNAseq分析需要的R包 install.packages(&quot;BiocManager&quot;) BiocManager::install(&quot;remotes&quot;, dependencies=T) BiocManager::install(&quot;devtools&quot;, dependencies=T) BiocManager::install(&quot;hfang-bristol/XGR&quot;, dependencies=T) BiocManager::install(&quot;hfang-bristol/PIONE&quot;, dependencies=T) library(XGR) library(PIONE) 安装OLINK分析需要的R包：OlinkAnalyze BiocManager::install(&quot;OlinkAnalyze&quot;, dependencies=T) library(OlinkAnalyze) 安装其他R包： BiocManager::install(&quot;包的名称&quot;) "],["rna-data.html", "Chapter 3 RNA-Data", " Chapter 3 RNA-Data 下载公共数据 GSE231706 的RNA-seq library(tidyverse) raw &lt;- read_delim(&quot;./data/GSE231706_Normalization.txt&quot;) ## 清洗下载的数据 df &lt;- raw %&gt;% dplyr::select(`Gene Symbol`,contains(&quot;SCR&quot;),contains(&quot;KD&quot;)) %&gt;% rename(Gene=`Gene Symbol`) %&gt;% distinct(Gene,.keep_all = T) %&gt;% column_to_rownames(&quot;Gene&quot;) colnames(df) &lt;- c(&quot;WT1&quot;,&quot;WT2&quot;,&quot;WT3&quot;,&quot;KO1&quot;,&quot;KO2&quot;,&quot;KO3&quot;) head(df) # 删除表达量过低的gene df &lt;- apply(df,2,FUN = function(x){return(2^x)}) df &lt;- df %&gt;% as.data.frame() %&gt;% mutate(Sum=rowSums(df)) %&gt;% filter(Sum &gt; 6) %&gt;% dplyr::select(-Sum) df &lt;- log2(df) # WT1 WT2 WT3 KO1 KO2 KO3 # A4GALT 1.48479 1.64620 1.50918 1.76116 1.68286 1.60380 # AAAS 5.54652 5.57043 5.37821 5.37711 5.41979 5.42553 # AACS 5.00831 5.05298 4.78734 4.76894 4.87734 4.67790 # AADAT 2.87019 2.65707 2.91066 2.80236 3.02523 2.87990 # AAED1 3.43895 3.44727 3.39725 3.38053 3.30732 3.32487 # AAGAB 5.27395 5.24923 5.18787 5.11202 5.20488 5.11748 saveRDS(df,&quot;./data/20231113_RNA_log2.rds&quot;) ## 准备样本信息 meta &lt;- data.frame(ID=colnames(df),Type=c(rep(&quot;WT&quot;,3),rep(&quot;KO&quot;,3))) rownames(meta) &lt;- meta$ID head(meta) # ID Type # WT1 WT1 WT # WT2 WT2 WT # WT3 WT3 WT # KO1 KO1 KO # KO2 KO2 KO # KO3 KO3 KO saveRDS(meta,&quot;./data/20231113_META.rds&quot;) "],["rna-analysis.html", "Chapter 4 RNA-Analysis 4.1 基础分析 4.2 进阶分析", " Chapter 4 RNA-Analysis 4.1 基础分析 library(tidyverse) library(ggpubr) library(ggthemes) library(gmodels) library(patchwork) library(limma) library(openxlsx) library(pheatmap) library(XGR) # BiocManager::install(&quot;hfang-bristol/XGR&quot;, dependencies=T) library(PIONE) # BiocManager::install(&quot;hfang-bristol/PIONE&quot;, dependencies=T) dir.create(&quot;./results/RNA&quot;,recursive = T) #---------------------------------------------------------------------------------- # Step 1: Load the Data #---------------------------------------------------------------------------------- rna &lt;- readRDS(&quot;./data/20231113_RNA_log2.rds&quot;) meta &lt;- readRDS(&quot;./data/20231113_META.rds&quot;) identical(colnames(rna),rownames(meta)) #---------------------------------------------------------------------------------- # Step 2: Boxplot #---------------------------------------------------------------------------------- rna.long &lt;- rna %&gt;% pivot_longer(everything(),names_to = &quot;ID&quot;, values_to = &quot;logFPKM&quot;) %&gt;% left_join(meta,by=&quot;ID&quot;) p &lt;- ggboxplot(rna.long, x=&quot;ID&quot;, y=&quot;logFPKM&quot;, ylab=&quot;log2FPKM&quot;,xlab = &quot;Sample&quot;) + theme_base() + theme(plot.background = element_blank()) ggsave(&quot;./results/RNA/1.Box.png&quot;,p,width = 8,height = 5) #---------------------------------------------------------------------------------- # Step 3: PCA #---------------------------------------------------------------------------------- pca.info &lt;- fast.prcomp(rna) pca.data &lt;- data.frame(sample = rownames(pca.info$rotation), Type = meta$Type, pca.info$rotation) p1 &lt;- ggscatter(pca.data, x = &quot;PC1&quot;, y = &quot;PC2&quot;, color = &quot;Type&quot;, ellipse = TRUE, size = 3, label = &quot;sample&quot; ,font.label = c(10, &quot;plain&quot;), main = &quot;PCA&quot;) + theme_base() + theme(plot.background = element_blank()) p2 &lt;- ggscatter(pca.data, x = &quot;PC2&quot;, y = &quot;PC3&quot;, color = &quot;Type&quot;, ellipse = TRUE, size = 3, label = &quot;sample&quot; ,font.label = c(10, &quot;plain&quot;), main = &quot;PCA&quot;) + theme_base() + theme(plot.background = element_blank()) p &lt;- p1+p2+plot_layout(guides=&quot;collect&quot;) ggsave(&quot;./results/RNA/2.PCA.png&quot;,p,width = 12,height = 5) #---------------------------------------------------------------------------------- # Step 4: DEG #---------------------------------------------------------------------------------- ## limma meta$contrast &lt;- as.factor(meta$Type) design &lt;- model.matrix(~ 0 + contrast , data = meta) fit &lt;- lmFit(rna, design) contrast &lt;- makeContrasts( KO_WT = contrastKO - contrastWT , levels = design) fits &lt;- contrasts.fit(fit, contrast) ebFit &lt;- eBayes(fits) ## result # KO_WT res &lt;- topTable(ebFit, coef = &quot;KO_WT&quot;, adjust.method = &#39;fdr&#39;, number = Inf) limma.res &lt;- res %&gt;% filter(!is.na(adj.P.Val)) %&gt;% mutate( logP = -log10(P.Value) ) %&gt;% mutate( contrast = &quot;KO_WT&quot;) %&gt;% mutate( logFDR = -log10(adj.P.Val) ) %&gt;% mutate( GeneSymbol = rownames(res)) %&gt;% dplyr::select(GeneSymbol,everything()) %&gt;% as_tibble() ## cutoff: adj.P.Val &lt; 0.05 &amp;&amp; |FC| &gt; 1.5 limma.res &lt;- limma.res %&gt;% mutate(group = case_when( adj.P.Val&lt;0.05&amp;logFC&gt;0.58 ~ &quot;up&quot;, adj.P.Val&lt;0.05&amp;logFC&lt; -0.58 ~ &quot;down&quot;, .default = &quot;not sig&quot;)) limma.res %&gt;% count(group) ## output write.xlsx( limma.res, &quot;./results/RNA/3.Limma_fdr0.05_fc1.5.xlsx&quot;, overwrite = T, rowNames = F) saveRDS(limma.res,&quot;./results/RNA/3.Limma_fdr0.05_fc1.5.rds&quot;) #---------------------------------------------------------------------------------- # Step 5: Volcano #---------------------------------------------------------------------------------- ## volcano # KO_WT pdata &lt;- limma.res %&gt;% mutate(group=factor(group,levels = c(&quot;up&quot;,&quot;down&quot;,&quot;not sig&quot;))) my_label &lt;- paste0( &quot;Cutoff:FDR&lt;0.05 &amp; |FC|&gt;1.5 ; \\n&quot; , &quot;Up:&quot;,table(pdata$group)[1],&quot; ; &quot; ,&quot;Down:&quot; , table(pdata$group)[2]) # label top 20 sig genes degs.1 &lt;- limma.res %&gt;% arrange(P.Value) %&gt;% filter(group==&quot;up&quot;) %&gt;% slice(1:20) %&gt;% pull(GeneSymbol) degs.2 &lt;- limma.res %&gt;% arrange(P.Value) %&gt;% filter(group==&quot;down&quot;) %&gt;% slice(1:20) %&gt;% pull(GeneSymbol) pdata &lt;- pdata %&gt;% mutate(label=case_when(GeneSymbol %in% c(degs.1,degs.2) ~ GeneSymbol, .default = &quot;&quot;)) # plot p &lt;- ggscatter(pdata, x = &quot;logFC&quot;, y = &quot;logFDR&quot;, color = &quot;group&quot;, size = 0.5, main = paste0(&quot;KO vs WT&quot;) , xlab = &quot;log2FoldChange&quot;, ylab = &quot;-log10(FDR)&quot;, palette = c(&quot;#CC0000&quot;,&quot;#339900&quot;,&quot;#444444&quot;), label = pdata$label,font.label = 10, repel = T, xlim = c(-10, 10) )+ theme_base()+ geom_hline(yintercept = -log10(0.05), linetype=&quot;dashed&quot;, color = &quot;#222222&quot;) + geom_vline(xintercept = log2(1.5) , linetype=&quot;dashed&quot;, color = &quot;#222222&quot;)+ geom_vline(xintercept = -log2(1.5) , linetype=&quot;dashed&quot;, color = &quot;#222222&quot;)+ labs(subtitle = my_label) + theme(plot.background = element_blank()) ggsave(&quot;./results/RNA/4.Volcano.png&quot;, p, width = 8, height = 8) ggsave(&quot;./results/RNA/4.Volcano.pdf&quot;, p, width = 8, height = 8) #---------------------------------------------------------------------------------- # Step 6: GO Enrichment #---------------------------------------------------------------------------------- placeholder &lt;- &quot;http://www.comptransmed.pro/bigdata_ctm&quot; ## Gene ontology #sets &lt;- tibble(onto=c(&#39;GOBP&#39;,&#39;GOCC&#39;,&#39;GOMF&#39;)) %&gt;% # mutate(set=map(onto,~oRDS(str_c(&quot;org.Mm.eg&quot;,.x),placeholder=placeholder))) ## 小鼠 sets &lt;- tibble(onto=c(&#39;GOBP&#39;,&#39;GOCC&#39;,&#39;GOMF&#39;)) %&gt;% # KEGG mutate(set=map(onto,~oRDS(str_c(&quot;org.Hs.eg&quot;,.x),placeholder=placeholder))) ## 人 ## KO_WT # DE genes deg_vec &lt;- limma.res %&gt;% filter(group!=&quot;not sig&quot;) %&gt;% pull(GeneSymbol) %&gt;% unique() # enrichment esad &lt;- oSEAadv(deg_vec, sets, size.range=c(15,1500), test=&quot;fisher&quot;, min.overlap=5) df_eTerm &lt;- esad %&gt;% oSEAextract() %&gt;% filter(adjp&lt;5e-2, distance==3) %&gt;% mutate(group=namespace) %&gt;% group_by(group) %&gt;% top_n(100,-adjp) %&gt;% arrange(group,adjp) # output df_eTerm %&gt;% openxlsx::write.xlsx(&quot;./results/RNA/5.Enrichment_GO_KO_WT.xlsx&quot;) # plot : oSEAballoon gp &lt;- df_eTerm %&gt;% oSEAballoon(top=20, adjp.cutoff=0.05, zlim=NULL, slim=c(0,100), size.range=c(0.5,2), shape=19, colormap=&quot;grey90-orange-darkred&quot;) ggsave(&quot;./results/RNA/5.Enrichment_GO_KO_WT.png&quot;, gp, width=5, height=5) 4.2 进阶分析 #---------------------------------------------------------------------------------- # Step 7: KEGG pathway Crosstalk analysis #---------------------------------------------------------------------------------- ## define KEGG-merged gene interaction network placeholder &lt;- &quot;http://www.comptransmed.pro/bigdata_ctm&quot; ig.KEGG.category &lt;- oRDS(&#39;ig.KEGG.merged&#39;, placeholder=placeholder) ## input : genes , p-value data.net &lt;- limma.res %&gt;% dplyr::select(GeneSymbol,P.Value) ## maximum-scoring subnetwork subg &lt;- xSubneterGenes(data.net,network.customised=ig.KEGG.category, subnet.size=30) # result subg &lt;- subg %&gt;% xLayout(&quot;layout_with_kk&quot;) df_subg &lt;- tibble(Symbol=V(subg)$name) %&gt;% inner_join(limma.res, by=c(&#39;Symbol&#39;=&#39;GeneSymbol&#39;)) V(subg)$logP &lt;- df_subg$logP V(subg)$logFDR &lt;- -log10(df_subg$adj.P.Val) V(subg)$logFC &lt;- df_subg$logFC # output out &lt;- igraph::as_data_frame(subg, what=&quot;vertices&quot;) %&gt;% as_tibble() %&gt;% arrange(-logP) %&gt;% mutate(gene=name) write.xlsx(out,&quot;./results/RNA/6.KEGG_subg.KO_WT.xlsx&quot;,overwrite = T) saveRDS(subg,file = &quot;./results/RNA/6.KEGG_subg.KO_WT.rds&quot;) # plot gg_subg &lt;- xGGnetwork(subg, node.label=&#39;name&#39;, node.label.size=3, node.label.color=&#39;black&#39;, node.label.alpha=1, node.label.padding=0.1, node.label.arrow=0, node.label.force=0.1, node.xcoord=&quot;xcoord&quot;, node.ycoord=&quot;ycoord&quot;, node.color=&quot;logFC&quot;, colormap=&quot;spectral&quot;, zlim=c(-3,3), node.color.title=&#39;log2FC&#39;, node.color.alpha=0.8, node.size=&quot;logP&quot;, node.size.range=c(1,10), slim=c(1,6), node.size.title=&quot;-log10(Pvalue)&quot;, edge.color=&quot;steelblue1&quot;, edge.color.alpha=0.5,edge.curve=0,edge.arrow.gap=0.01, title=paste0(&quot;Maximum-scoring KEGG subnetwork in KO vs WT&quot;)) ggsave(&quot;./results/RNA/6.KEGG_subg.KO_WT.png&quot;, gg_subg, width=6, height=5) ggsave(&quot;./results/RNA/6.KEGG_subg.KO_WT.pdf&quot;, gg_subg, width=6, height=5) ## network KEGG pathway enrichment placeholder &lt;- &quot;http://www.comptransmed.pro/bigdata_ctm&quot; sets &lt;- tibble(onto=c(&#39;KEGG&#39;)) %&gt;% mutate(set=map(onto,~oRDS(str_c(&quot;org.Hs.eg&quot;,.x),placeholder=placeholder))) subg.node &lt;- vertex_attr(subg)$name subg.enrich &lt;- oSEAadv(subg.node,sets, size.range=c(15,1500), test=&quot;fisher&quot;, min.overlap=5) subg.enrich.df &lt;- subg.enrich %&gt;% oSEAextract() %&gt;% mutate(group=namespace) %&gt;% arrange(adjp) %&gt;% filter(distance==3) %&gt;% dplyr::select(name,adjp,distance,everything()) write.xlsx(subg.enrich.df,&quot;./results/RNA/7.KEGG_subg.KO_WT_enrichment.xlsx&quot;) name adjp group nO PI3K-Akt signaling pathway 0.0e+00 Environmental Process 15 MAPK signaling pathway 0.0e+00 Environmental Process 12 Pathways in cancer 0.0e+00 Human Disease 14 Ras signaling pathway 1.0e-07 Environmental Process 10 Leishmaniasis 2.4e-06 Human Disease 6 ECM-receptor interaction 4.5e-06 Environmental Process 6 "],["pro-data.html", "Chapter 5 PRO-Data", " Chapter 5 PRO-Data Data preprocessing library(OlinkAnalyze) library(tidyverse) library(openxlsx) #---------------------------------------------------------------------------------- # Step 1: Load raw Olink data #---------------------------------------------------------------------------------- data(npx_data1) # OlinkAnalyze 包内置demo数据 dat_olink &lt;- npx_data1 %&gt;% filter(PlateID==&quot;Example_Data_1_CAM.csv&quot;) # long format # SampleID Index OlinkID UniProt Assay MissingFreq Panel_Version PlateID QC_Warning LOD NPX # &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; # 1 A1 1 OID01216 O00533 CHL1 0.0188 v.1201 Example_Data… Pass 2.37 13.0 # 2 A2 2 OID01216 O00533 CHL1 0.0188 v.1201 Example_Data… Pass 2.37 11.3 # 3 A3 3 OID01216 O00533 CHL1 0.0188 v.1201 Example_Data… Pass 2.37 25.5 # 4 A4 4 OID01216 O00533 CHL1 0.0188 v.1201 Example_Data… Pass 2.37 14.5 # 5 A5 5 OID01216 O00533 CHL1 0.0188 v.1201 Example_Data… Pass 2.37 7.63 # 6 A6 6 OID01216 O00533 CHL1 0.0188 v.1201 Example_Data… Pass 2.37 6.32 dat_olink &lt;- dat_olink %&gt;% filter(!str_detect(SampleID,&#39;CONTROL_SAMPLE&#39;)) #---------------------------------------------------------------------------------- # Step 2: add clinical data #---------------------------------------------------------------------------------- # cli &lt;- data_frame(ID = unique(dat_olink$SampleID), # Age = sample(60:100, length(unique(dat_olink$SampleID)), replace = TRUE), # Gender = sample(c(&quot;Female&quot;,&quot;Male&quot;), length(unique(dat_olink$SampleID)), replace = TRUE)) # write.xlsx(cli,&quot;./data/20231129_olink_cli.xlsx&quot;) cli &lt;- read.xlsx(&quot;./data/20231129_olink_cli.xlsx&quot;) # ID Age Gender # 1 A1 95 Male # 2 A2 87 Female # 3 A3 82 Female # 4 A4 65 Female # 5 A5 88 Female # 6 A6 62 Female dat_olink &lt;- dat_olink %&gt;% left_join(cli,by = c(&quot;SampleID&quot;=&quot;ID&quot;)) dat_olink &lt;- dat_olink %&gt;% mutate(Group=case_match(Treatment, &quot;Treated&quot;~&quot;Treated&quot;, &quot;Untreated&quot;~&quot;Untreated&quot;, .default = &quot;QC&quot;)) # 分组情况 dat_olink %&gt;% distinct(SampleID,Group) %&gt;% count(Group) # 查看Warning样本 dat_olink %&gt;% filter(QC_Warning==&quot;Warning&quot;) %&gt;% pull(SampleID) %&gt;% unique() # A sample will get a QC warning (not pass the quality control) if Incubation Control 2 or Detection Control (corresponding to that specific sample) deviates more than a pre-determined value (+/- 0.3) from the median value of all samples on the plate. #---------------------------------------------------------------------------------- # Step 3: exclude proteins with MissingFreq &gt; 60% #---------------------------------------------------------------------------------- # https://olink.com/faq/how-is-the-limit-of-detection-lod-estimated-and-handled/ dat_clean &lt;- dat_olink %&gt;% filter(MissingFreq &lt;= 0.6) ## 需根据数据调整阈值 # excluse 0 protein #---------------------------------------------------------------------------------- # Step 4: output #---------------------------------------------------------------------------------- ## long format dat_clean write.xlsx(dat_clean,&quot;./data/20231123_olink_long.xlsx&quot;) saveRDS(dat_clean,&quot;./data/20231123_olink_long.rds&quot;) ## wide format dat_clean_wide &lt;- dat_clean %&gt;% dplyr::select(SampleID,NPX,Assay) %&gt;% pivot_wider(names_from = &quot;SampleID&quot;, values_from = &quot;NPX&quot;) %&gt;% as.data.frame() %&gt;% column_to_rownames(&quot;Assay&quot;) # A1 A2 A3 A4 A5 A6 A7 A8 # CHL1 12.9561426 11.269477 25.451070 14.453038 7.628712 6.316586 12.7306116 13.6663354 # NRP1 3.7297092 6.144801 6.950510 3.725393 7.198343 7.789239 10.8019996 9.8789692 # PLXNB2 2.0861223 1.483985 1.228214 3.278853 4.989030 4.654764 1.1875243 0.6908001 # FCGR3B 11.6096290 17.582141 10.494904 14.969670 13.087540 11.463464 7.9634394 0.1154297 # LILRB5 0.7241916 3.329488 4.392219 1.132330 1.237068 2.342279 -0.2936439 1.8003573 # APOM 8.5426236 10.395668 14.669500 16.194933 15.074472 13.904607 6.7865950 7.7481516 write.xlsx(dat_clean_wide,&quot;./data/20231123_olink_wide.xlsx&quot;,rowNames=T,colNames=T,overwrite=T) saveRDS(dat_clean_wide,&quot;./data/20231123_olink_wide.rds&quot;) ## meta meta &lt;- data.frame(ID = colnames(dat_clean_wide)) meta &lt;- meta %&gt;% left_join(cli,by=&quot;ID&quot;) meta &lt;- meta %&gt;% left_join(dat_clean %&gt;% dplyr::select(SampleID,Group) %&gt;% distinct(SampleID,Group),by=c(&quot;ID&quot;=&quot;SampleID&quot;)) rownames(meta) &lt;- meta$ID identical(rownames(meta),colnames(dat_clean_wide)) saveRDS(meta,&quot;./data/20231123_olink_meta.rds&quot;) # ID Age Gender Group # A1 A1 95 Male Untreated # A2 A2 87 Female Untreated # A3 A3 82 Female Untreated # A4 A4 65 Female Untreated # A5 A5 88 Female Untreated # A6 A6 62 Female Untreated Olink clean data, long format: 20231123_olink_long.xlsx Olink clean data, wide format: 20231123_olink_wide.xlsx "],["pro-analysis.html", "Chapter 6 PRO-Analysis 6.1 QC 6.2 Differential Protein Expression Analysis", " Chapter 6 PRO-Analysis 6.1 QC If a sample is an outlier in the PCA, NPX distribution, and QC plots, that this might indicate a true outlier. library(OlinkAnalyze) library(tidyverse) library(openxlsx) library(patchwork) dir.create(&quot;./results/PRO&quot;,recursive = T) #---------------------------------------------------------------------------------- # Step 1: Load clean Olink data #---------------------------------------------------------------------------------- dat_clean &lt;- readRDS(&quot;./data/20231123_olink_long.rds&quot;) %&gt;% as_tibble() # SampleID Index OlinkID UniProt Assay MissingFreq Panel_Version PlateID QC_Warning LOD NPX # &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; # 1 A1 1 OID012… O00533 CHL1 0.0188 v.1201 Exampl… Pass 2.37 13.0 # 2 A2 2 OID012… O00533 CHL1 0.0188 v.1201 Exampl… Pass 2.37 11.3 # 3 A3 3 OID012… O00533 CHL1 0.0188 v.1201 Exampl… Pass 2.37 25.5 # 4 A4 4 OID012… O00533 CHL1 0.0188 v.1201 Exampl… Pass 2.37 14.5 # 5 A5 5 OID012… O00533 CHL1 0.0188 v.1201 Exampl… Pass 2.37 7.63 # 6 A6 6 OID012… O00533 CHL1 0.0188 v.1201 Exampl… Pass 2.37 6.32 #---------------------------------------------------------------------------------- # Step 2: PCA plot: check QC_Warning samples &amp; Group #---------------------------------------------------------------------------------- p1 &lt;- dat_clean %&gt;% olink_pca_plot(label_samples = T, quiet = T) p2 &lt;- dat_clean %&gt;% olink_pca_plot(color_g = &quot;Group&quot;, quiet = T) p &lt;- p1[[1]] + p2[[1]] ggsave(&quot;./results/PRO/1.PCA_QC.png&quot;, p, width = 12, height = 5) ## PCA plot: 3 SD from the mean of the plotted PC # Samples more than +/-outlierDef[3,3] standard deviations from the mean of the plotted PC will be labelled. p &lt;- dat_clean %&gt;% olink_pca_plot(outlierDefX = 3, outlierDefY = 3, outlierLines = T, label_outliers = T, quiet = T) ggsave(&quot;./results/PRO/1.PCA_QC_outlierDef_3sd.png&quot;, p[[1]], width = 6, height = 4) #---------------------------------------------------------------------------------- # Step 3: Boxplot: NPX distribution plot #---------------------------------------------------------------------------------- p1 &lt;- dat_clean %&gt;% olink_dist_plot() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) p2 &lt;- dat_clean %&gt;% olink_dist_plot(color_g = &quot;Group&quot;) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) p &lt;- p1 + p2 + plot_layout(ncol = 1) ggsave(&quot;./results/PRO/2.Box_distribution.png&quot;, p, width = 12, height = 7) #---------------------------------------------------------------------------------- # Step 4: QC plot: IQR_median #---------------------------------------------------------------------------------- # IQR: interquartile range, 四分位距 # dashed lines: +/-3 standard deviations p1 &lt;- dat_clean %&gt;% olink_qc_plot() p2 &lt;- dat_clean %&gt;% olink_qc_plot(color_g = &quot;Group&quot;) p &lt;- p1 + p2 ggsave(&quot;./results/PRO/3.IQR_qc.png&quot;, p, width = 12, height = 5) -注：是否应排除这些异常值取决于潜在异常值与其他样本的不同程度，以及异常值是否可以追溯到生物学、样本特定或技术问题。综合上述几个分析，本测试数据的QC_Warning样本予以保留。 6.2 Differential Protein Expression Analysis library(rstatix) #---------------------------------------------------------------------------------- # Step 1: Basic statistical analysis on clinical data: Age &amp; Gender #---------------------------------------------------------------------------------- dat_clean %&gt;% dplyr::select(Group, Gender) %&gt;% table() %&gt;% chisq_test() ## 性别在分组之间有显著差异，需要进行矫正 # n statistic p df method p.signif # * &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; # 1 7084 261. 1.24e-58 1 Chi-square test **** dat_clean %&gt;% t_test( Age ~ Group , detailed = T) # estimate estimate1 estimate2 .y. group1 group2 n1 n2 statistic p df conf.low conf.high # * &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; # 1 0.227 79.2 79.0 Age Treated Untre… 2208 4876 0.692 0.489 4007. -0.416 0.871 #---------------------------------------------------------------------------------- # Step 2: T test, no adjustment #---------------------------------------------------------------------------------- # perform t-test dat_clean &lt;- dat_clean %&gt;% mutate(Group = factor(Group,levels=c(&quot;Treated&quot;,&quot;Untreated&quot;))) ttest_results &lt;- olink_ttest(df = dat_clean, variable = &quot;Group&quot;) # cutoff: adj.P.Val &lt; 0.05 &amp;&amp; |FC| &gt; 1.5 ttest_results &lt;- ttest_results %&gt;% dplyr::rename(&quot;log2FC&quot; = &quot;estimate&quot;) %&gt;% mutate(Group = case_when( Adjusted_pval&lt;0.05&amp;log2FC&gt;0.58 ~ &quot;up&quot;, Adjusted_pval&lt;0.05&amp;log2FC&lt; -0.58 ~ &quot;down&quot;, .default = &quot;not sig&quot;)) # output write.xlsx(ttest_results, file = &quot;./results/PRO/4.deps_ttest_results.xlsx&quot;) table(ttest_results$Group) Olink deps results (no adjustment): 4.deps_ttest_results.xlsx #---------------------------------------------------------------------------------- # Step 3: limma, adjusted by Gender #---------------------------------------------------------------------------------- library(limma) # data: wide format exp &lt;- readRDS(&quot;./data/20231123_olink_wide.rds&quot;) meta &lt;- readRDS(&quot;./data/20231123_olink_meta.rds&quot;) identical(rownames(meta),colnames(exp)) # limma meta$contrast &lt;- as.factor(meta$Group) design &lt;- model.matrix(~ 0 + contrast + Gender , data = meta) fit &lt;- lmFit(exp, design) contrast &lt;- makeContrasts( limma_adjAge = contrastTreated - contrastUntreated , levels = design) fits &lt;- contrasts.fit(fit, contrast) ebFit &lt;- eBayes(fits) # result # KO_WT res &lt;- topTable(ebFit, coef = &quot;limma_adjAge&quot;, adjust.method = &#39;fdr&#39;, number = Inf) limma.res &lt;- res %&gt;% filter(!is.na(adj.P.Val)) %&gt;% mutate( logP = -log10(P.Value) ) %&gt;% mutate( contrast = &quot;Treated_Untreated&quot;) %&gt;% mutate( logFDR = -log10(adj.P.Val) ) %&gt;% mutate( GeneSymbol = rownames(res)) %&gt;% dplyr::select(GeneSymbol,everything()) %&gt;% as_tibble() ## cutoff: adj.P.Val &lt; 0.05 &amp;&amp; |FC| &gt; 1.5 limma.res &lt;- limma.res %&gt;% mutate(group = case_when( adj.P.Val&lt;0.05&amp;logFC&gt;0.58 ~ &quot;up&quot;, adj.P.Val&lt;0.05&amp;logFC&lt; -0.58 ~ &quot;down&quot;, .default = &quot;not sig&quot;)) limma.res %&gt;% count(group) ## output write.xlsx( limma.res, &quot;./results/PRO/5.deps_limma_adjAge_results.xlsx&quot;, overwrite = T, rowNames = F) 其他分析及可视化部分可参考RNA-seq分析 "],["session-information.html", "Chapter 7 Session Information 7.1 R Session info 7.2 Reference", " Chapter 7 Session Information 7.1 R Session info # Show session information sessionInfo() ## R version 4.3.2 (2023-10-31) ## Platform: x86_64-apple-darwin20 (64-bit) ## Running under: macOS Monterey 12.6.8 ## ## Matrix products: default ## BLAS: /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib; LAPACK version 3.11.0 ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## time zone: Asia/Shanghai ## tzcode source: internal ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] pheatmap_1.0.12 gmodels_2.18.1.1 ggthemes_4.2.4 ggpubr_0.6.0 ## [5] PIONE_1.0.0 XGR_1.1.9 dnet_1.1.7 supraHex_1.40.0 ## [9] hexbin_1.28.3 igraph_1.5.1 limma_3.58.1 rstatix_0.7.2 ## [13] patchwork_1.1.3 lubridate_1.9.3 forcats_1.0.0 stringr_1.5.1 ## [17] dplyr_1.1.3 purrr_1.0.2 readr_2.1.4 tidyr_1.3.0 ## [21] tibble_3.2.1 ggplot2_3.4.4 tidyverse_2.0.0 OlinkAnalyze_3.6.0 ## [25] DT_0.30 openxlsx_4.2.5.2 knitr_1.45 ## ## loaded via a namespace (and not attached): ## [1] RColorBrewer_1.1-3 rstudioapi_0.15.0 jsonlite_1.8.7 ## [4] magrittr_2.0.3 TH.data_1.1-2 estimability_1.4.1 ## [7] farver_2.1.1 nloptr_2.0.3 rmarkdown_2.25 ## [10] fs_1.6.3 zlibbioc_1.48.0 ragg_1.2.6 ## [13] vctrs_0.6.4 memoise_2.0.1 minqa_1.2.6 ## [16] RCurl_1.98-1.13 htmltools_0.5.7 curl_5.1.0 ## [19] broom_1.0.5 cellranger_1.1.0 sass_0.4.7 ## [22] bslib_0.5.1 htmlwidgets_1.6.2 sandwich_3.0-2 ## [25] emmeans_1.8.9 zoo_1.8-12 cachem_1.0.8 ## [28] commonmark_1.9.0 lifecycle_1.0.4 ggnetwork_0.5.12 ## [31] pkgconfig_2.0.3 Matrix_1.6-2 R6_2.5.1 ## [34] fastmap_1.1.1 GenomeInfoDbData_1.2.11 digest_0.6.33 ## [37] numDeriv_2016.8-1.1 colorspace_2.1-0 S4Vectors_0.40.1 ## [40] textshaping_0.3.7 crosstalk_1.2.0 GenomicRanges_1.54.1 ## [43] labeling_0.4.3 gdata_3.0.0 fansi_1.0.5 ## [46] timechange_0.2.0 polyclip_1.10-6 httr_1.4.7 ## [49] abind_1.4-5 compiler_4.3.2 withr_2.5.2 ## [52] backports_1.4.1 viridis_0.6.4 carData_3.0-5 ## [55] highr_0.10 ggforce_0.4.1 ggsignif_0.6.4 ## [58] MASS_7.3-60 gtools_3.9.4 tools_4.3.2 ## [61] ape_5.7-1 zip_2.3.0 glue_1.6.2 ## [64] nlme_3.1-163 grid_4.3.2 generics_0.1.3 ## [67] gtable_0.3.4 tzdb_0.4.0 hms_1.1.3 ## [70] tidygraph_1.2.3 xml2_1.3.5 car_3.1-2 ## [73] utf8_1.2.4 XVector_0.42.0 BiocGenerics_0.48.1 ## [76] ggrepel_0.9.4 pillar_1.9.0 RCircos_1.2.2 ## [79] splines_4.3.2 tweenr_2.0.2 lattice_0.22-5 ## [82] survival_3.5-7 tidyselect_1.2.0 pbapply_1.7-2 ## [85] gridExtra_2.3 osfr_0.2.9 bookdown_0.36 ## [88] IRanges_2.36.0 crul_1.4.0 stats4_4.3.2 ## [91] xfun_0.41 graphlayouts_1.0.2 statmod_1.5.0 ## [94] stringi_1.8.1 yaml_2.3.7 boot_1.3-28.1 ## [97] evaluate_0.23 codetools_0.2-19 httpcode_0.3.0 ## [100] ggraph_2.1.0 BiocManager_1.30.22 Rgraphviz_2.46.0 ## [103] graph_1.80.0 cli_3.6.1 xtable_1.8-4 ## [106] systemfonts_1.0.5 munsell_0.5.0 jquerylib_0.1.4 ## [109] Rcpp_1.0.11 GenomeInfoDb_1.38.1 readxl_1.4.3 ## [112] coda_0.19-4 png_0.1-8 XML_3.99-0.15 ## [115] parallel_4.3.2 ellipsis_0.3.2 bitops_1.0-7 ## [118] lme4_1.1-35.1 viridisLite_0.4.2 mvtnorm_1.2-3 ## [121] lmerTest_3.1-3 scales_1.2.1 crayon_1.5.2 ## [124] rlang_1.1.2 multcomp_1.4-25 7.2 Reference GSE231706 ggboxplot PCA ggscatter limma XGR PIONE Olink® Analyze Vignette "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
