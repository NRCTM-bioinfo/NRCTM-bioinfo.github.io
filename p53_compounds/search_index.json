[["index.html", "p53 compounds Chapter 1 Introduction", " p53 compounds Yu-Ting Dai 2023-07-05 Chapter 1 Introduction p53 is a tumor suppressor protein that plays a crucial role in regulating cell growth, DNA repair, and apoptosis (programmed cell death). Mutant p53 proteins often lose their tumor-suppressive abilities and may acquire oncogenic properties that contribute to cancer development and progression. Therefore, rescuing or restoring the normal function of p53 is a promising strategy for cancer therapy. There are several approaches to rescue p53 function in cancer cells. One common approach is the use of small molecule compounds that can restore the wild-type conformation and activity of mutant p53. These compounds, known as p53 rescue compounds, work by binding to the mutant p53 protein, inducing conformational changes, and promoting its proper folding and functional activity. In this tutorial, we provided the source code to evaluate pharmacological rescue of mutant p53. "],["data-collection.html", "Chapter 2 Data Collection 2.1 RNA-sequencing data 2.2 GEO data 2.3 TCGA data 2.4 Download data 2.5 Load packages", " Chapter 2 Data Collection 2.1 RNA-sequencing data #!/bin/bash #SBATCH -p SVC # partition (queue) #SBATCH --job-name=p53 #SBATCH -n 8 #SBATCH --array=1-69 #SBATCH -t 7-00:00 # time (D-HH:MM) #SBATCH -o _log/salmon.%N.%A_%a.out # STDOUT #SBATCH -e _log/salmon.%N.%A_%a.err # STDERR #SBATCH --mail-type=END,FAIL # notifications for job done &amp; fail #SBATCH --mail-user=XX id=`sed -n ${SLURM_ARRAY_TASK_ID}p sample.txt` echo &quot;${id}&quot; fq_path=${path_to_fastq} fq1=${fq_path}/${id}_R1.fq.gz fq2=${fq_path}/${id}_R2.fq.gz gtf_file=${path_to_reference}/gencode.v40.annotation.gtf salmon_index=${path_to_reference}/gencode.v40_salmon-1.8 out_path=${out_path} $SALMON_1_8 quant -p 8 -l IU -i ${salmon_index} -o ${out_path}/${id} -1 ${fq1} -2 ${fq2} -g ${gtf_file} --gcBias --validateMappings 2.2 GEO data # Download GEO data using GEOquery # Taking GSE15658 as an example seq.name.list &lt;- c(&quot;GSE15658&quot;) for (i in 1:length(seq.name.list)) { seq.name = seq.name.list[i] message(i , &quot; &quot;, seq.name) gset &lt;- getGEO(seq.name, GSEMatrix = TRUE, AnnotGPL = TRUE, getGPL = TRUE ) save(gset, file = paste0( seq.name, &quot;.geo.rds&quot;)) } # load GEO and and perform average intensity load(paste0(&quot;geo/GSE15658.geo.rds&quot;)) exprset &lt;- exprs(gset[[1]]) pdata &lt;- pData(gset[[1]]) fdata &lt;- fData(gset[[1]]) exprset &lt;- na.omit(exprset) fdata &lt;- fdata[match(rownames(exprset), fdata[, 1]), ] exprset &lt;- exprset - min(exprset) sum(row.names(exprset) != fdata[, &quot;ID&quot;]) exp_mat &lt;- aggregate(exprset, list(Symbol = fdata[, &quot;Gene symbol&quot;]), mean) exp_mat &lt;- exp_mat[exp_mat$Symbol != &quot;&quot;, ] rownames(exp_mat) &lt;- exp_mat$Symbol exp_mat$Symbol &lt;- NULL exp_mat &lt;- normalizeBetweenArrays(exp_mat) 2.3 TCGA data The gene expression data and clinical data of the TCGA Pan-Cancer cohorts included in this study can be accessed through the following link: https://xenabrowser.net/datapages/ 2.4 Download data To download the data, please visit https://github.com/NRCTM-bioinfo/p53_compounds. 2.5 Load packages library(openxlsx) library(dplyr) library(DT) library(nlme) library(DESeq2) library(SummarizedExperiment) library(openxlsx) library(dendextend) library(matrixStats) library(data.table) library(ggpubr) library(limma) library(DESeq2) library(pheatmap) library(gplots) library(survminer) library(survival) library(enrichR) library(stringr) library(ggthemes) library(fmsb) # color theme tp53.mutant &lt;- c(&quot;WT&quot;,&quot;L130V&quot;,&quot;L130F&quot;,&quot;L130R&quot;,&quot;P142L&quot;,&quot;V143M&quot;,&quot;A161T&quot;,&quot;M237V&quot;,&quot;G245D&quot;,&quot;F270I&quot;,&quot;F270V&quot;,&quot;V272A&quot;,&quot;V272M&quot;,&quot;R248Q&quot;,&quot;R273H&quot;,&quot;null&quot;) tp53.mutant.color &lt;- c(&quot;red&quot;,rep(&quot;#494949&quot;,&quot;14&quot;),&quot;#EEEEEE&quot;) names(tp53.mutant.color) &lt;- tp53.mutant anno.color &lt;- list( Mutant = tp53.mutant.color) "],["on-target-and-off-target.html", "Chapter 3 On-target and off-target 3.1 Merge profiling 3.2 Normalization 3.3 32 confident p53 targets 3.4 116 p53 targets", " Chapter 3 On-target and off-target 3.1 Merge profiling tp53.targets &lt;- read.xlsx(&quot;suppdata/p53_targets.xlsx&quot;) rownames(tp53.targets) &lt;- tp53.targets$Gene tp53.target.g32 &lt;- tp53.targets$Gene[which(tp53.targets$LiteratureNum &gt;= 10)] tp53.target.g116 &lt;- tp53.targets$Gene merge.meta.data &lt;- read.xlsx(&quot;suppdata/p53_meta.xlsx&quot;, sheet = 1) merge.compare.data &lt;- read.xlsx(&quot;suppdata/Extended Data Table 1.xlsx&quot;, sheet = 1, startRow = 2) merge.compare.data$Sample &lt;- merge.compare.data$`Sample.name.(after.treatment)` merge.compare.data$Control &lt;- merge.compare.data$`Sample.name.(untreated.samples)` merge.compare.data$Group &lt;- str_replace(merge.compare.data$Sample, regex(&quot;_rep.$&quot;), &quot;&quot;) rownames(merge.compare.data) &lt;- merge.compare.data$`Sample.name.(after.treatment)` merge.mat &lt;- read.xlsx(&quot;suppdata/Extended Data Table 1.xlsx&quot;, sheet = 2, startRow = 3, rowNames = T) 3.2 Normalization # Median normalization merge.nor.mat &lt;- merge.mat sub.1 &lt;- aggregate(colMedians(as.matrix(merge.nor.mat)), list(Cell = merge.meta.data$Dataset), min) for (i in 1:ncol(merge.nor.mat)) { merge.nor.mat[, i] &lt;- merge.nor.mat[, i] - sub.1$x[which(sub.1$Cell == merge.meta.data$Dataset[i])] } # Generation of fold change (Log2-transformed for FPKM) of cell line samples after treatment compared to before treatment compare.mat &lt;- NULL for (i in 1:nrow(merge.compare.data)) { if (length(grep(&quot;; &quot;, merge.compare.data$Control[i])) &gt; 0) { sub.1 &lt;- unlist(str_split(merge.compare.data$Control[i], &quot;; &quot;)) sub &lt;- merge.nor.mat[, merge.compare.data$Sample[i]] - rowMeans(merge.nor.mat[, sub.1]) } else { sub &lt;- merge.nor.mat[, merge.compare.data$Sample[i]] - merge.nor.mat[, merge.compare.data$Control[i]] } compare.mat &lt;- cbind(compare.mat, sub) } colnames(compare.mat) &lt;- merge.compare.data$Sample 3.3 32 confident p53 targets Related to Fig. 1a. my.breaks &lt;- c(seq(-1.5, -0.01, by = 0.001), seq(0.01, 1.5, by = 0.001) ) my.colors &lt;- c(colorRampPalette(colors = c(&quot;#00599F&quot;,&quot;#00599F&quot;,&quot;#287dba&quot;,&quot;#62aee5&quot;,&quot;#a8dcff&quot;,&quot;white&quot;))(length(my.breaks)/2), colorRampPalette(colors = c(&quot;white&quot;,&quot;#ffca79&quot;,&quot;#ef6e51&quot;,&quot;#db1b18&quot;,&quot;#b50600&quot;,&quot;#b50600&quot;))(length(my.breaks)/2)) plot.mat &lt;- compare.mat[tp53.target.g32, ] anno.data &lt;- data.frame(row.names = merge.compare.data$Sample, Mutant = merge.compare.data$p53.status) p &lt;- pheatmap(plot.mat, scale = &quot;none&quot;, color = my.colors, breaks = my.breaks, cluster_row = F, cluster_col = F, border_color = NA, annotation_col = anno.data, annotation_colors = anno.color, clustering_method = &quot;ward.D2&quot;, clustering_distance_rows = &quot;manhattan&quot;, clustering_distance_cols = &quot;manhattan&quot;, fontsize_col = 6, fontsize_row = 6) p plot.mat &lt;- compare.mat[!rownames(compare.mat) %in% tp53.target.g32, ] p &lt;- pheatmap(plot.mat, scale = &quot;none&quot;, color = my.colors, breaks = my.breaks, cluster_row = F, cluster_col = F, border_color = NA, annotation_col = anno.data, annotation_colors = anno.color, clustering_method = &quot;ward.D2&quot;, clustering_distance_rows = &quot;manhattan&quot;, clustering_distance_cols = &quot;manhattan&quot;, fontsize_col = 6, fontsize_row = 0.1) p 3.4 116 p53 targets Related to Extended Data Fig. 1a. my.breaks &lt;- c(seq(-1.5, -0.01, by = 0.001), seq(0.01, 1.5, by = 0.001) ) my.colors &lt;- c(colorRampPalette(colors = c(&quot;#00599F&quot;,&quot;#00599F&quot;,&quot;#287dba&quot;,&quot;#62aee5&quot;,&quot;#a8dcff&quot;,&quot;white&quot;))(length(my.breaks)/2), colorRampPalette(colors = c(&quot;white&quot;,&quot;#ffca79&quot;,&quot;#ef6e51&quot;,&quot;#db1b18&quot;,&quot;#b50600&quot;,&quot;#b50600&quot;))(length(my.breaks)/2)) plot.mat &lt;- compare.mat[tp53.target.g116, ] anno.data &lt;- data.frame(row.names = merge.compare.data$Sample, Mutant = merge.compare.data$p53.status) p &lt;- pheatmap(plot.mat, scale = &quot;none&quot;, color = my.colors, breaks = my.breaks, cluster_row = F, cluster_col = F, border_color = NA, annotation_col = anno.data, annotation_colors = anno.color, clustering_method = &quot;ward.D2&quot;, clustering_distance_rows = &quot;manhattan&quot;, clustering_distance_cols = &quot;manhattan&quot;, fontsize_col = 6, fontsize_row = 2) p plot.mat &lt;- compare.mat[!rownames(compare.mat) %in% tp53.target.g116, ] p &lt;- pheatmap(plot.mat, scale = &quot;none&quot;, color = my.colors, breaks = my.breaks, cluster_row = F, cluster_col = F, border_color = NA, annotation_col = anno.data, annotation_colors = anno.color, clustering_method = &quot;ward.D2&quot;, clustering_distance_rows = &quot;manhattan&quot;, clustering_distance_cols = &quot;manhattan&quot;, fontsize_col = 8, fontsize_row = 0.1) p 3.4.1 On-target and off-target score Related to Extended Data Fig. 1c and 1d. plot.order &lt;- c(&quot;U937_WT&quot;,&quot;U937_L130V_ATO&quot;,&quot;U937_L130F_ATO&quot;,&quot;U937_L130R_ATO&quot;,&quot;U937_P142L_ATO&quot;,&quot;U937_V143M_ATO&quot;,&quot;U937_M237V_ATO&quot;,&quot;U937_F270I_ATO&quot;,&quot;U937_F270V_ATO&quot;,&quot;U937_V272A_ATO&quot;,&quot;U937_V272M_ATO&quot;,&quot;U937_V272M_PAT&quot;,&quot;Kasumi-1_R248Q_Kevetrin_6h&quot;,&quot;SKM1_R248Q_APR-246&quot;,&quot;staET7.1_R273H_APR-246&quot;,&quot;staET7.2_R273H_APR-246&quot;,&quot;staET7.3_R273H_APR-246&quot;,&quot;Saos-2_R273H_APR-246_6h&quot;,&quot;Saos-2_R273H_APR-246_12h&quot;,&quot;Kasumi-1_R248Q_Kevetrin_48h&quot;,&quot;PCI13_G245D_COTI-2&quot;,&quot;U266_A161T_PRIMA-1&quot;,&quot;U937_R273H_ATO&quot;,&quot;U937_R273H_PAT&quot;,&quot;PCI13_G245D_CDDP&quot;,&quot;8266R5_null_PRIMA-1&quot;,&quot;Saos-2_null_APR-246_6h&quot;,&quot;Saos-2_null_APR-246_12h&quot;) total.onoff &lt;- NULL total.test.cutoff &lt;- c(1.2, 1.4, 1.5, 1.6, 1.8, 2.0) for (i in 1:length(total.test.cutoff)) { cutoff_tmp &lt;- round(log2(total.test.cutoff[i]), 2) plot.data &lt;- data.frame(Sample = colnames(compare.mat), UP_116 = colSums(compare.mat[tp53.target.g116, ] &gt; cutoff_tmp) , UP_32 = colSums(compare.mat[tp53.target.g32, ] &gt; cutoff_tmp), UP_other_116 = colSums(compare.mat[!rownames(compare.mat) %in% tp53.target.g116, ] &gt; cutoff_tmp) , UP_other_32 = colSums(compare.mat[!rownames(compare.mat) %in% tp53.target.g32, ] &gt; cutoff_tmp) ) plot.data$Mutant &lt;- merge.compare.data$p53.status[match(plot.data$Sample, merge.compare.data$Sample)] plot.data$MutantType &lt;- &quot;MUT&quot; plot.data$MutantType[which(plot.data$Mutant == &quot;WT&quot;)] &lt;- &quot;WT&quot; plot.data$ON_target_32 &lt;- (plot.data$UP_32) / (plot.data$UP_other_32 + plot.data$UP_32) / (32/18296) plot.data$ON_target_116 &lt;- (plot.data$UP_116) / (plot.data$UP_other_116 + plot.data$UP_116) / (116/18296) plot.data$OFF_target_32 &lt;- plot.data$UP_other_32 / (plot.data$UP_other_32 + plot.data$UP_32) / ((18296-32)/18296) plot.data$OFF_target_116 &lt;- plot.data$UP_other_116 / (plot.data$UP_other_116 + plot.data$UP_116) / ((18296-116)/18296) plot.data$Group &lt;- merge.compare.data$Group[match(plot.data$Sample, merge.compare.data$Sample)] plot.data$ON_target_32[which(is.na(plot.data$ON_target_32))] = 1 plot.data$ON_target_116[which(is.na(plot.data$ON_target_116))] = 1 plot.data$OFF_target_32[which(is.na(plot.data$OFF_target_32))] = 1 plot.data$OFF_target_116[which(is.na(plot.data$OFF_target_116))] = 1 plot.data.group &lt;- aggregate(plot.data[, c(&quot;ON_target_32&quot;,&quot;ON_target_116&quot;,&quot;OFF_target_32&quot;,&quot;OFF_target_116&quot;)], list(Sample = plot.data$Group), mean) plot.data.group &lt;- plot.data.group[match(plot.order, plot.data.group$Sample), ] plot.data.group$Mutant &lt;- merge.compare.data$p53.status[match(plot.data.group$Sample, merge.compare.data$Sample)] plot.data.group$MutantType &lt;- &quot;MUT&quot; plot.data.group$MutantType[which(plot.data.group$Mutant == &quot;WT&quot;)] &lt;- &quot;WT&quot; if (i &lt; 6) { group.tag &lt;- paste0(&quot;FC_&quot;, total.test.cutoff[i] ) } else { group.tag &lt;- &quot;FC_2.0&quot; } plot.data.group$Group &lt;- group.tag total.onoff &lt;- rbind(total.onoff, plot.data.group) } total.onoff$Group &lt;- factor(as.character(total.onoff$Group), levels = c(&quot;FC_1.2&quot;,&quot;FC_1.4&quot;,&quot;FC_1.5&quot;,&quot;FC_1.6&quot;,&quot;FC_1.8&quot;,&quot;FC_2.0&quot;)) p &lt;- ggdotchart(total.onoff, x = &quot;Sample&quot;, y = &quot;ON_target_32&quot;, color = &quot;MutantType&quot;, sorting = &quot;none&quot;, shape = 16, order = plot.order, main = paste0(&quot;32 confident p53 targets&quot;), xlab = &quot;&quot;, ylab = &quot;On-target score&quot;, palette = c(&quot;black&quot;,&quot;red&quot;), width = 0.6, dot.size = 2 ) p &lt;- p + geom_hline(yintercept = 1, linetype = 2, color = &quot;black&quot;) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 4)) p &lt;- p + scale_y_continuous(breaks = c(0,1,16,32,48,64), labels = c(0,1,16,32,48,64), limits = c(0,64) ) p &lt;- p + facet_wrap( ~ Group, ncol = 6) p p &lt;- ggdotchart(total.onoff, x = &quot;Sample&quot;, y = &quot;OFF_target_32&quot;, color = &quot;MutantType&quot;, sorting = &quot;none&quot;, shape = 16, order = plot.order, main = paste0(&quot;32 confident p53 targets&quot;), xlab = &quot;&quot;, ylab = &quot;Off-target score&quot;, palette = c(&quot;black&quot;,&quot;red&quot;), width = 0.6, dot.size = 2 ) + theme_few() p &lt;- p + geom_hline(yintercept = 1, linetype = 2, color = &quot;black&quot;) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 4)) p &lt;- p + scale_y_continuous(limits = c(0.80, 1.05)) p &lt;- p + facet_wrap( ~ Group, ncol = 6) p p &lt;- ggdotchart(total.onoff, x = &quot;Sample&quot;, y = &quot;ON_target_116&quot;, color = &quot;MutantType&quot;, sorting = &quot;none&quot;, shape = 16, order = plot.order, main = paste0(&quot;116 p53 targets&quot;), xlab = &quot;&quot;, ylab = &quot;On-target score&quot;, palette = c(&quot;black&quot;,&quot;red&quot;), width = 0.6, dot.size = 2 ) p &lt;- p + geom_hline(yintercept = 1, linetype = 2, color = &quot;black&quot;) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 4)) p &lt;- p + scale_y_continuous(breaks = c(0,1,16,32,48,64), labels = c(0,1,16,32,48,64), limits = c(0,64) ) p &lt;- p + facet_wrap( ~ Group, ncol = 6) p p &lt;- ggdotchart(total.onoff, x = &quot;Sample&quot;, y = &quot;OFF_target_116&quot;, color = &quot;MutantType&quot;, sorting = &quot;none&quot;, shape = 16, order = plot.order, main = paste0(&quot;116 p53 targets&quot;), xlab = &quot;&quot;, ylab = &quot;Off-target score&quot;, palette = c(&quot;black&quot;,&quot;red&quot;), width = 0.6, dot.size = 2 ) + theme_few() p &lt;- p + geom_hline(yintercept = 1, linetype = 2, color = &quot;black&quot;) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 4)) p &lt;- p + scale_y_continuous(limits = c(0.80, 1.05)) p &lt;- p + facet_wrap( ~ Group, ncol = 6) p 3.4.2 Using cutoff FC 1.5 Related to Fig. 1c. total.onoff.sub &lt;- total.onoff[which(total.onoff$Group == &quot;FC_1.5&quot;), ] p &lt;- ggdotchart(total.onoff.sub, x = &quot;Sample&quot;, y = &quot;ON_target_32&quot;, color = &quot;MutantType&quot;, sorting = &quot;none&quot;, shape = 16, order = plot.order, main = paste0(&quot;32 confident p53 targets&quot;), xlab = &quot;&quot;, ylab = &quot;On-target score&quot;, palette = c(&quot;black&quot;,&quot;red&quot;), dot.size = 4 ) + theme_few() p &lt;- p + geom_hline(yintercept = 1, linetype = 2, color = &quot;black&quot;) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10)) p &lt;- p + scale_y_continuous(limits = c(-0.5,16), breaks = c(0,1,4,8,12,16)) p p &lt;- ggdotchart(total.onoff.sub, x = &quot;Sample&quot;, y = &quot;OFF_target_32&quot;, color = &quot;MutantType&quot;, sorting = &quot;none&quot;, shape = 16, order = plot.order, main = paste0(&quot;32 confident p53 targets&quot;), xlab = &quot;&quot;, ylab = &quot;Off-target score&quot;, palette = c(&quot;black&quot;,&quot;red&quot;), dot.size = 4 ) + theme_few() p &lt;- p + geom_hline(yintercept = 1, linetype = 2, color = &quot;black&quot;) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10)) p &lt;- p + scale_y_continuous(limits = c(0.95,1.005)) p p &lt;- ggdotchart(total.onoff.sub, x = &quot;Sample&quot;, y = &quot;ON_target_116&quot;, color = &quot;MutantType&quot;, sorting = &quot;none&quot;, shape = 16, order = plot.order, main = paste0(&quot;116 p53 targets&quot;), xlab = &quot;&quot;, ylab = &quot;On-target score&quot;, palette = c(&quot;black&quot;,&quot;red&quot;), dot.size = 4 ) + theme_few() p &lt;- p + geom_hline(yintercept = 1, linetype = 2, color = &quot;black&quot;) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10)) p &lt;- p + scale_y_continuous(limits = c(-0.5,12), breaks = c(0,1,4,8,12)) p p &lt;- ggdotchart(total.onoff.sub, x = &quot;Sample&quot;, y = &quot;OFF_target_116&quot;, color = &quot;MutantType&quot;, sorting = &quot;none&quot;, shape = 16, order = plot.order, main = paste0(&quot;116 p53 targets&quot;), xlab = &quot;&quot;, ylab = &quot;Off-target score&quot;, palette = c(&quot;black&quot;,&quot;red&quot;), dot.size = 4 ) + theme_few() p &lt;- p + geom_hline(yintercept = 1, linetype = 2, color = &quot;black&quot;) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10)) p &lt;- p + scale_y_continuous(limits = c(0.92,1.01)) p "],["enrichment-analysis.html", "Chapter 4 Enrichment analysis 4.1 Calculated DEGs 4.2 Enrichr analysis 4.3 MSigDB Hallmark 4.4 KEGG database 4.5 TRRUST Transcription Factors", " Chapter 4 Enrichment analysis 4.1 Calculated DEGs websiteLive &lt;- TRUE dbs &lt;- listEnrichrDbs() if (websiteLive) head(dbs) gene.enrich &lt;- list() compare.group &lt;- unique(merge.compare.data$Group) for (i in 1:length(compare.group) ) { sub.sample &lt;- merge.compare.data[which(merge.compare.data$Group == compare.group[i]), ] if (nrow(sub.sample) == 1) { sub &lt;- rownames(compare.mat[which(compare.mat[, sub.sample$Sample] &gt; 0.58 ), ]) } else { sub &lt;- rownames(compare.mat[which(rowMeans(compare.mat[, sub.sample$Sample]) &gt; 0.58 ), ]) } gene.enrich &lt;- c(gene.enrich, list(sub = sub)) } names(gene.enrich) &lt;- compare.group 4.2 Enrichr analysis enrichr.total &lt;- NULL enrichr.db.name &lt;- c(&quot;KEGG_2021_Human&quot;,&quot;MSigDB_Hallmark_2020&quot;,&quot;TRRUST_Transcription_Factors_2019&quot;) for (i in 1:length(gene.enrich)) { message(i, &quot; &quot;, names(gene.enrich)[i] ) enrichr.sub &lt;- enrichr(gene.enrich[[i]], enrichr.db.name) enrichr.sub$`KEGG_2021_Human`$Database &lt;- &quot;KEGG_2021_Human&quot; enrichr.sub$`MSigDB_Hallmark_2020`$Database &lt;- &quot;MSigDB_Hallmark_2020&quot; enrichr.sub$`TRRUST_Transcription_Factors_2019`$Database &lt;- &quot;TRRUST_Transcription_Factors_2019&quot; sub &lt;- rbind(enrichr.sub$`KEGG_2021_Human`, enrichr.sub$`MSigDB_Hallmark_2020`, enrichr.sub$`TRRUST_Transcription_Factors_2019` ) sub$Sample &lt;- names(gene.enrich)[i] enrichr.total &lt;- rbind(enrichr.total, sub) } ## 1 U937_WT ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 2 U937_L130V_ATO ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 3 U937_L130F_ATO ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 4 U937_L130R_ATO ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 5 U937_P142L_ATO ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 6 U937_V143M_ATO ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 7 U937_M237V_ATO ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 8 U937_F270I_ATO ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 9 U937_F270V_ATO ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 10 U937_V272A_ATO ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 11 U937_V272M_ATO ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 12 U937_V272M_PAT ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 13 Kasumi-1_R248Q_Kevetrin_6h ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 14 SKM1_R248Q_APR-246 ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 15 staET7.1_R273H_APR-246 ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 16 staET7.2_R273H_APR-246 ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 17 staET7.3_R273H_APR-246 ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 18 Saos-2_R273H_APR-246_6h ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 19 Saos-2_R273H_APR-246_12h ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 20 Kasumi-1_R248Q_Kevetrin_48h ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 21 PCI13_G245D_COTI-2 ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 22 U266_A161T_PRIMA-1 ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 23 U937_R273H_ATO ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 24 U937_R273H_PAT ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 25 PCI13_G245D_CDDP ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 26 8266R5_null_PRIMA-1 ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 27 Saos-2_null_APR-246_6h ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. ## 28 Saos-2_null_APR-246_12h ## Uploading data to Enrichr... Done. ## Querying KEGG_2021_Human... Done. ## Querying MSigDB_Hallmark_2020... Done. ## Querying TRRUST_Transcription_Factors_2019... Done. ## Parsing results... Done. plot.data &lt;- enrichr.total[which(enrichr.total$P.value &lt; 0.05), ] plot.data &lt;- plot.data[-grep(&quot; mouse$&quot;, plot.data$Term), ] plot.data$Old.P.value &lt;- NULL plot.data$Old.Adjusted.P.value &lt;- NULL plot.data$Count &lt;- as.numeric(str_replace_all(plot.data$Overlap, regex(&quot;/.+&quot;), &quot;&quot;)) plot.data &lt;- plot.data[which(plot.data$Count &gt;= 10), ] plot.data$Sample &lt;- factor(as.character(plot.data$Sample), levels = names(gene.enrich)) plot.data &lt;- plot.data[order(plot.data$Sample, plot.data$Database, plot.data$P.value), ] plot.data$Rank &lt;- NA for (i in 1:length(names(gene.enrich))) { for (j in 1:length(enrichr.db.name)) { idx &lt;- which(plot.data$Database == enrichr.db.name[j] &amp; plot.data$Sample == names(gene.enrich)[i]) if (length(idx) &gt; 0) plot.data$Rank[idx] = 1:length(idx) } } plot.data &lt;- plot.data[, c(&quot;Sample&quot;,&quot;Term&quot;,&quot;Count&quot;,&quot;Overlap&quot;,&quot;P.value&quot;,&quot;Adjusted.P.value&quot;,&quot;Odds.Ratio&quot;,&quot;Combined.Score&quot;,&quot;Genes&quot;,&quot;Rank&quot;,&quot;Database&quot;)] 4.3 MSigDB Hallmark Related to Fig. 1d. plot.info &lt;- plot.data[which(plot.data$Database == &quot;MSigDB_Hallmark_2020&quot;), ] plot.info.sub &lt;- plot.info %&gt;% group_by(Sample) %&gt;% top_n(n = -2, wt = Rank) plot.info.sub$Rank &lt;- plot.info.sub$Rank %&gt;% as.factor() p &lt;- ggplot(plot.info.sub, aes(x = Sample, y = Term, fill = Rank, color = Rank)) + geom_point(size = 5) p &lt;- p + scale_color_manual(values = c(`1` = &quot;black&quot;, `2` = &quot;#a3a3a3&quot;) ) p &lt;- p + scale_x_discrete(limits = plot.order) p &lt;- p + scale_y_discrete(limits = rev(c(&quot;p53 Pathway&quot;,&quot;Apoptosis&quot;,&quot;TNF-alpha Signaling via NF-kB&quot;,&quot;Interferon Gamma Response&quot;,&quot;Interferon Alpha Response&quot;,&quot;Inflammatory Response&quot;,&quot;Coagulation&quot;,&quot;Complement&quot;,&quot;E2F Targets&quot;,&quot;Hypoxia&quot;,&quot;Estrogen Response Early&quot;,&quot;Estrogen Response Late&quot;,&quot;KRAS Signaling Dn&quot;,&quot;KRAS Signaling Up&quot;,&quot;mTORC1 Signaling&quot;,&quot;Myogenesis&quot;,&quot;Unfolded Protein Response&quot;,&quot;Xenobiotic Metabolism&quot;)) ) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10, color = &quot;black&quot;)) p &lt;- p + xlab(&quot;&quot;) + ylab(&quot;MSigDB Hallmark 2020&quot;) p 4.4 KEGG database Related to Extended Data Fig. 1e. plot.info &lt;- plot.data[which(plot.data$Database == &quot;KEGG_2021_Human&quot;), ] plot.info.sub &lt;- plot.info %&gt;% group_by(Sample) %&gt;% top_n(n = -2, wt = Rank) plot.info.sub$Rank &lt;- plot.info.sub$Rank %&gt;% as.factor() p &lt;- ggplot(plot.info.sub, aes(x = Sample, y = Term, fill = Rank, color = Rank)) + geom_point(size = 5) p &lt;- p + scale_color_manual(values = c(`1` = &quot;black&quot;, `2` = &quot;#a3a3a3&quot;) ) p &lt;- p + scale_x_discrete(limits = plot.order) p &lt;- p + scale_y_discrete(limits = rev(c(&quot;p53 signaling pathway&quot;,&quot;Lysosome&quot;,&quot;NOD-like receptor signaling pathway&quot;,&quot;Osteoclast differentiation&quot;,&quot;Mineral absorption&quot;,&quot;Complement and coagulation cascades&quot;,&quot;Cytokine-cytokine receptor interaction&quot;,&quot;Neuroactive ligand-receptor interaction&quot;,&quot;Colorectal cancer&quot;,&quot;Pathways in cancer&quot;,&quot;Herpes simplex virus 1 infection&quot;,&quot;Coronavirus disease&quot;,&quot;Epstein-Barr virus infection&quot;,&quot;Human T-cell leukemia virus 1 infection&quot;,&quot;Lipid and atherosclerosis&quot;,&quot;MAPK signaling pathway&quot;,&quot;mTOR signaling pathway&quot;,&quot;Measles&quot;,&quot;Olfactory transduction&quot;,&quot;Protein processing in endoplasmic reticulum&quot;,&quot;Staphylococcus aureus infection&quot;,&quot;Viral protein interaction with cytokine and cytokine receptor&quot;)) ) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10, color = &quot;black&quot;)) p &lt;- p + xlab(&quot;&quot;) + ylab(&quot;KEGG 2021 Human&quot;) p 4.5 TRRUST Transcription Factors Related to Extended Data Fig. 1e. plot.info &lt;- plot.data[which(plot.data$Database == &quot;TRRUST_Transcription_Factors_2019&quot;), ] plot.info.sub &lt;- plot.info %&gt;% group_by(Sample) %&gt;% top_n(n = -2, wt = Rank) plot.info.sub$Rank &lt;- plot.info.sub$Rank %&gt;% as.factor() p &lt;- ggplot(plot.info.sub, aes(x = Sample, y = Term, fill = Rank, color = Rank)) + geom_point(size = 5) p &lt;- p + scale_color_manual(values = c(`1` = &quot;black&quot;, `2` = &quot;#a3a3a3&quot;) ) p &lt;- p + scale_x_discrete(limits = plot.order) p &lt;- p + scale_y_discrete(limits = rev(c(&quot;TP53 human&quot;,&quot;BRCA1 human&quot;,&quot;STAT1 human&quot;,&quot;STAT3 human&quot;,&quot;SPI1 human&quot;,&quot;NFKB1 human&quot;,&quot;JUN human&quot;,&quot;ATF4 human&quot;,&quot;RELA human&quot;,&quot;CEBPA human&quot;,&quot;CEBPB human&quot;,&quot;ETS1 human&quot;,&quot;SIRT1 human&quot;,&quot;SMAD3 human&quot;,&quot;SP1 human&quot;)) ) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10, color = &quot;black&quot;)) p &lt;- p + xlab(&quot;&quot;) + ylab(&quot;TRRUST Transcription Factors 2019&quot;) p "],["tcga-pancanatlas.html", "Chapter 5 TCGA PanCanAtlas 5.1 Calculate WT-up genes 5.2 Calculate MUT-up genes 5.3 Powerfulness in regulating 5.4 HR of high expression", " Chapter 5 TCGA PanCanAtlas 5.1 Calculate WT-up genes # DEGs between p53 mut (top mutations) and p53 wt enroll.data &lt;- tcga.mutation.tp53[tcga.mutation.tp53$Amino_Acid_Change %in% tp53.mut.topall$Mutation, ] total.deg &lt;- NULL for (kkk in 1:length(TCGA.ALL)) { pdata &lt;- tcga.meta sum(pdata$sample != colnames(tcga.fpkm)) pdata$contrast &lt;- &quot;other&quot; pdata$contrast[which(pdata$TP53mut == &quot;Yes&quot; &amp; pdata$project_id == TCGA.ALL[kkk] &amp; pdata$sample %in% enroll.data$Sample_ID)] &lt;- &quot;c1&quot; pdata$contrast[which(pdata$TP53mut == &quot;No&quot; &amp; pdata$project_id == TCGA.ALL[kkk] &amp; pdata$WithMutation == &quot;Yes&quot;)] &lt;- &quot;c2&quot; message(kkk, &quot; &quot;, TCGA.ALL[kkk], &quot; &quot;, sum(pdata$contrast %in% c(&quot;c1&quot;)), &quot; &quot;, sum(pdata$contrast %in% c(&quot;c2&quot;)) ) if (length(unique(pdata$contrast)) == 3 &amp; sum(table(pdata$contrast) &lt; 1) == 0 ) { pdata.sub &lt;- pdata[which(pdata$contrast != &quot;other&quot;), ] design &lt;- model.matrix(~ 0 + as.factor(contrast), data = pdata.sub) colnames(design) &lt;- str_replace_all(colnames(design), fixed(&quot;as.factor(contrast)&quot;), &quot;&quot;) fit &lt;- lmFit(tcga.fpkm[rownames(tcga.fpkm) %in% white.gene, pdata.sub$sample], design) contrast &lt;- makeContrasts(c1_c2 = c1 - c2, levels = design) fits &lt;- contrasts.fit(fit, contrast) ebFit &lt;- eBayes(fits) deg_sig_list &lt;- topTable(ebFit, coef = 1, adjust.method = &#39;fdr&#39;, number = Inf) deg.data &lt;- deg_sig_list[which(!is.na(deg_sig_list$P.Value)), ] deg.data$logP &lt;- -log10(deg.data$P.Value) deg.data$logFDR &lt;- -log10(deg.data$adj.P.Val) deg.data$group = &quot;zz&quot; deg.data$group[which( (deg.data$adj.P.Val &lt; 0.05) &amp; (deg.data$logFC &gt; 0.58) )] = &quot;up&quot; deg.data$group[which( (deg.data$adj.P.Val &lt; 0.05) &amp; (deg.data$logFC &lt; -0.58) )] = &quot;down&quot; deg.data$tag &lt;- paste0(&quot;TP53 mut -vs- wt&quot;) deg.data$Gene &lt;- rownames(deg.data) deg.data$Cohort &lt;- TCGA.ALL[kkk] write.xlsx(deg.data, paste0(&quot;output/degs_tp53_wtup_top/cohort/&quot;, TCGA.ALL[kkk], &quot;.deg.xlsx&quot; ), rowNames = T, overwrite = T) total.deg &lt;- rbind(total.deg, deg.data) deg.data$Label = deg.data$Gene deg.data$Label[which(deg.data$group == &quot;zz&quot;)] = &quot;&quot; p &lt;- ggscatter(deg.data, x = &quot;logFC&quot;, y = &quot;logFDR&quot;, color = &quot;group&quot;, size = 0.5, label = deg.data$Label, font.label = 4, repel = T, main = paste0(TCGA.ALL[kkk], &quot; TP53 mut vs wt&quot;), xlab = &quot;log2FoldChange&quot;, ylab = &quot;-log10(FDR)&quot;, palette = c(down = &quot;#00599F&quot;, up = &quot;#D01910&quot;, zz = &quot;#BBBBBB&quot;)) p &lt;- p + theme_base() p &lt;- p + geom_hline(yintercept = 1.30, linetype=&quot;dashed&quot;, color = &quot;#222222&quot;) p &lt;- p + geom_vline(xintercept = 0.58, linetype=&quot;dashed&quot;, color = &quot;#222222&quot;) p &lt;- p + geom_vline(xintercept = -0.58, linetype=&quot;dashed&quot;, color = &quot;#222222&quot;) ggsave(paste0(&quot;output/degs_tp53_wtup_top/cohort/&quot;, TCGA.ALL[kkk], &quot;.deg.pdf&quot;), p, width = 9, height = 8) } else { message(TCGA.ALL[kkk]) } } total.deg$Cohort &lt;- factor(as.character(total.deg$Cohort), levels = TCGA.ALL) saveRDS(total.deg, &quot;output/degs_tp53_wtup_top/total.deg.rds&quot;) 5.2 Calculate MUT-up genes # DEGs between p53 mut (top missense mutations) and p53 wt enroll.data &lt;- tcga.mutation.tp53[tcga.mutation.tp53$Amino_Acid_Change %in% tp53.mut.topmis$Mutation, ] table(enroll.data$Class) total.deg &lt;- NULL for (kkk in 1:length(TCGA.ALL)) { pdata &lt;- tcga.meta sum(pdata$sample != colnames(tcga.fpkm)) pdata$contrast &lt;- &quot;other&quot; pdata$contrast[which(pdata$TP53mut == &quot;Yes&quot; &amp; pdata$project_id == TCGA.ALL[kkk] &amp; pdata$sample %in% enroll.data$Sample_ID)] &lt;- &quot;c1&quot; pdata$contrast[which(pdata$TP53mut == &quot;No&quot; &amp; pdata$project_id == TCGA.ALL[kkk] &amp; pdata$WithMutation == &quot;Yes&quot;)] &lt;- &quot;c2&quot; message(kkk, &quot; &quot;, TCGA.ALL[kkk], &quot; &quot;, sum(pdata$contrast %in% c(&quot;c1&quot;)), &quot; &quot;, sum(pdata$contrast %in% c(&quot;c2&quot;)) ) if (length(unique(pdata$contrast)) == 3 &amp; sum(table(pdata$contrast) &lt; 1) == 0 ) { pdata.sub &lt;- pdata[which(pdata$contrast != &quot;other&quot;), ] design &lt;- model.matrix(~ 0 + as.factor(contrast), data = pdata.sub) colnames(design) &lt;- str_replace_all(colnames(design), fixed(&quot;as.factor(contrast)&quot;), &quot;&quot;) fit &lt;- lmFit(tcga.fpkm[rownames(tcga.fpkm) %in% white.gene, pdata.sub$sample], design) contrast &lt;- makeContrasts(c1_c2 = c1 - c2, levels = design) fits &lt;- contrasts.fit(fit, contrast) ebFit &lt;- eBayes(fits) deg_sig_list &lt;- topTable(ebFit, coef = 1, adjust.method = &#39;fdr&#39;, number = Inf) deg.data &lt;- deg_sig_list[which(!is.na(deg_sig_list$P.Value)), ] deg.data$logP &lt;- -log10(deg.data$P.Value) deg.data$logFDR &lt;- -log10(deg.data$adj.P.Val) deg.data$group = &quot;zz&quot; deg.data$group[which( (deg.data$adj.P.Val &lt; 0.05) &amp; (deg.data$logFC &gt; 0.58) )] = &quot;up&quot; deg.data$group[which( (deg.data$adj.P.Val &lt; 0.05) &amp; (deg.data$logFC &lt; -0.58) )] = &quot;down&quot; deg.data$tag &lt;- paste0(&quot;TP53 mut -vs- wt&quot;) deg.data$Gene &lt;- rownames(deg.data) deg.data$Cohort &lt;- TCGA.ALL[kkk] write.xlsx(deg.data, paste0(&quot;output/degs_tp53_mutup_top/cohort/&quot;, TCGA.ALL[kkk], &quot;.deg.xlsx&quot; ), rowNames = T, overwrite = T) total.deg &lt;- rbind(total.deg, deg.data) deg.data$Label = deg.data$Gene deg.data$Label[which(deg.data$group == &quot;zz&quot;)] = &quot;&quot; p &lt;- ggscatter(deg.data, x = &quot;logFC&quot;, y = &quot;logFDR&quot;, color = &quot;group&quot;, size = 0.5, label = deg.data$Label, font.label = 4, repel = T, main = paste0(TCGA.ALL[kkk], &quot; TP53 mis vs wt&quot;), xlab = &quot;log2FoldChange&quot;, ylab = &quot;-log10(FDR)&quot;, palette = c(down = &quot;#00599F&quot;, up = &quot;#D01910&quot;, zz = &quot;#BBBBBB&quot;)) p &lt;- p + theme_base() p &lt;- p + geom_hline(yintercept = 1.30, linetype=&quot;dashed&quot;, color = &quot;#222222&quot;) p &lt;- p + geom_vline(xintercept = 0.58, linetype=&quot;dashed&quot;, color = &quot;#222222&quot;) p &lt;- p + geom_vline(xintercept = -0.58, linetype=&quot;dashed&quot;, color = &quot;#222222&quot;) ggsave(paste0(&quot;output/degs_tp53_mutup_top/cohort/&quot;, TCGA.ALL[kkk], &quot;.deg.pdf&quot;), p, width = 9, height = 8) } else { message(TCGA.ALL[kkk]) } } total.deg$Cohort &lt;- factor(as.character(total.deg$Cohort), levels = TCGA.ALL) saveRDS(total.deg, &quot;output/3.tcga/degs_tp53_mutup_top/total.deg.rds&quot;) 5.3 Powerfulness in regulating Heatmap of fold changes of expression of the p53 signature genes between p53-wild-type and p53-mutant tumors in the TCGA Pan-Cancer Atlas. 5.3.1 116 p53 targets Related to Fig. 3a. TCGA.ALL &lt;- c(&quot;TCGA-OV&quot;,&quot;TCGA-UCS&quot;,&quot;TCGA-LUSC&quot;,&quot;TCGA-ESCA&quot;,&quot;TCGA-READ&quot;,&quot;TCGA-HNSC&quot;,&quot;TCGA-PAAD&quot;,&quot;TCGA-COAD&quot;,&quot;TCGA-LUAD&quot;,&quot;TCGA-BLCA&quot;,&quot;TCGA-STAD&quot;,&quot;TCGA-LGG&quot;,&quot;TCGA-UCEC&quot;,&quot;TCGA-SARC&quot;,&quot;TCGA-BRCA&quot;,&quot;TCGA-GBM&quot;,&quot;TCGA-LIHC&quot;,&quot;TCGA-KICH&quot;,&quot;TCGA-ACC&quot;,&quot;TCGA-MESO&quot;,&quot;TCGA-DLBC&quot;,&quot;TCGA-PRAD&quot;,&quot;TCGA-CHOL&quot;,&quot;TCGA-SKCM&quot;,&quot;TCGA-CESC&quot;,&quot;TCGA-LAML&quot;,&quot;TCGA-THYM&quot;,&quot;TCGA-KIRC&quot;,&quot;TCGA-KIRP&quot;,&quot;TCGA-TGCT&quot;,&quot;TCGA-THCA&quot;,&quot;TCGA-PCPG&quot;,&quot;TCGA-UVM&quot;) plot.data &lt;- read.xlsx(&quot;suppdata/Extended Data Table 3.xlsx&quot;, sheet = 4, startRow = 2) gene.list &lt;- unique(plot.data$Gene) plot.mat &lt;- matrix(NA, nrow = length(gene.list), ncol = length(TCGA.ALL)) rownames(plot.mat) &lt;- gene.list colnames(plot.mat) &lt;- TCGA.ALL for (i in 1:ncol(plot.mat)) { sub &lt;- plot.data[which(plot.data$TCGA.Cohort == colnames(plot.mat)[i]), ] if (nrow(sub) &gt; 0) { plot.mat[, i] &lt;- 0 sub.1 &lt;- sub[which(sub$GeneType == &quot;FC &gt; 1 (Others)&quot;), ] plot.mat[sub.1$Gene, i] &lt;- 1 sub.2 &lt;- sub[which(sub$GeneType == &quot;FC &gt; 1 (FC &gt; 1.5 &amp; P.adj &lt; 0.05)&quot;), ] plot.mat[sub.2$Gene, i] &lt;- 2 } } stat.cohort &lt;- data.frame(Cohort = colnames(plot.mat), SigCount = colSums(plot.mat == 2), NotSigCount = colSums(plot.mat == 1) ) stat.cohort &lt;- stat.cohort[order(stat.cohort$SigCount, stat.cohort$NotSigCount, decreasing = T), ] plot.mat &lt;- plot.mat[, stat.cohort$Cohort] p &lt;- pheatmap(plot.mat, scale = &quot;none&quot;, color = colorRampPalette(c(&quot;#fffef3&quot;,&quot;#edd1ff&quot;,&quot;#984ac9&quot;))(501), cluster_row = F, cluster_col = F, border_color = NA, clustering_method = &quot;ward.D2&quot;, display_numbers = FALSE, number_format = &quot;%.f&quot;, number_color = &quot;black&quot;, clustering_distance_rows = &quot;manhattan&quot;, clustering_distance_cols = &quot;manhattan&quot;, fontsize_col = 10, fontsize_row = 1) p 5.3.2 WT-up genes Related to Fig. 3a. plot.data &lt;- read.xlsx(&quot;suppdata/Extended Data Table 3.xlsx&quot;, sheet = 5, startRow = 2) gene.list &lt;- unique(plot.data$Gene) plot.mat &lt;- matrix(NA, nrow = length(gene.list), ncol = length(TCGA.ALL)) rownames(plot.mat) &lt;- gene.list colnames(plot.mat) &lt;- TCGA.ALL for (i in 1:ncol(plot.mat)) { sub &lt;- plot.data[which(plot.data$TCGA.Cohort == colnames(plot.mat)[i]), ] if (nrow(sub) &gt; 0) { plot.mat[, i] &lt;- 0 sub.1 &lt;- sub[which(sub$GeneType == &quot;FC &gt; 1 (Others)&quot;), ] plot.mat[sub.1$Gene, i] &lt;- 1 sub.2 &lt;- sub[which(sub$GeneType == &quot;FC &gt; 1 (FC &gt; 1.5 &amp; P.adj &lt; 0.05)&quot;), ] plot.mat[sub.2$Gene, i] &lt;- 2 } } stat.cohort &lt;- data.frame(Cohort = colnames(plot.mat), SigCount = colSums(plot.mat == 2), NotSigCount = colSums(plot.mat == 1) ) stat.cohort &lt;- stat.cohort[order(stat.cohort$SigCount, stat.cohort$NotSigCount, decreasing = T), ] plot.mat &lt;- plot.mat[, stat.cohort$Cohort] p &lt;- pheatmap(plot.mat, scale = &quot;none&quot;, color = colorRampPalette(c(&quot;#fffef3&quot;,&quot;#edd1ff&quot;,&quot;#984ac9&quot;))(501), cluster_row = F, cluster_col = F, border_color = NA, clustering_method = &quot;ward.D2&quot;, display_numbers = FALSE, number_format = &quot;%.f&quot;, number_color = &quot;black&quot;, clustering_distance_rows = &quot;manhattan&quot;, clustering_distance_cols = &quot;manhattan&quot;, fontsize_col = 10, fontsize_row = 1) p 5.3.3 MUT-up genes Related to Fig. 3a. plot.data &lt;- read.xlsx(&quot;suppdata/Extended Data Table 3.xlsx&quot;, sheet = 6, startRow = 2) gene.list &lt;- unique(plot.data$Gene) plot.mat &lt;- matrix(NA, nrow = length(gene.list), ncol = length(TCGA.ALL)) rownames(plot.mat) &lt;- gene.list colnames(plot.mat) &lt;- TCGA.ALL for (i in 1:ncol(plot.mat)) { sub &lt;- plot.data[which(plot.data$TCGA.Cohort == colnames(plot.mat)[i]), ] if (nrow(sub) &gt; 0) { plot.mat[, i] &lt;- 0 sub.1 &lt;- sub[which(sub$GeneType == &quot;FC &gt; 1 (Others)&quot;), ] plot.mat[sub.1$Gene, i] &lt;- 1 sub.2 &lt;- sub[which(sub$GeneType == &quot;FC &gt; 1 (FC &gt; 1.5 &amp; P.adj &lt; 0.05)&quot;), ] plot.mat[sub.2$Gene, i] &lt;- 2 } } stat.cohort &lt;- data.frame(Cohort = colnames(plot.mat), SigCount = colSums(plot.mat == 2), NotSigCount = colSums(plot.mat == 1) ) stat.cohort &lt;- stat.cohort[order(stat.cohort$SigCount, stat.cohort$NotSigCount, decreasing = T), ] plot.mat &lt;- plot.mat[, stat.cohort$Cohort] p &lt;- pheatmap(plot.mat, scale = &quot;none&quot;, color = colorRampPalette(c(&quot;#fffef3&quot;,&quot;#edd1ff&quot;,&quot;#984ac9&quot;))(501), cluster_row = F, cluster_col = F, border_color = NA, clustering_method = &quot;ward.D2&quot;, display_numbers = FALSE, number_format = &quot;%.f&quot;, number_color = &quot;black&quot;, clustering_distance_rows = &quot;manhattan&quot;, clustering_distance_cols = &quot;manhattan&quot;, fontsize_col = 10, fontsize_row = 1) p 5.4 HR of high expression HR of overexpression of p53 signature genes among TCGA cancer types. 5.4.1 116 p53 targets Related to Fig. 3b. plot.data &lt;- read.xlsx(&quot;suppdata/Extended Data Table 3.xlsx&quot;, sheet = 7, startRow = 2) gene.list &lt;- unique(plot.data$Gene) plot.data$HR_type &lt;- 1 plot.data$HR_type[which(plot.data$HR &lt; 0.67 | plot.data$HR &gt; 1.5)] &lt;- 1.5 plot.data$P_type &lt;- &quot;P ≥ 0.05&quot; plot.data$P_type[which(plot.data$P.value &lt; 0.05 &amp; plot.data$HR &gt; 1)] &lt;- &quot;P &lt; 0.05, HR &gt; 1&quot; plot.data$P_type[which(plot.data$P.value &lt; 0.05 &amp; plot.data$HR &lt; 1)] &lt;- &quot;P &lt; 0.05, HR &lt; 1&quot; plot.data$P_type &lt;- factor(as.character(plot.data$P_type), levels = c(&quot;P &lt; 0.05, HR &lt; 1&quot;,&quot;P ≥ 0.05&quot;,&quot;P &lt; 0.05, HR &gt; 1&quot;)) plot.data$Tag &lt;- 0 plot.data$Tag[which(plot.data$Regulation.pattern.upon.ATO.treatment == &quot;Downregulation (FC &lt; 0.8) of unfavorable (HR &gt; 1.5) genes&quot;)] &lt;- 1 plot.data$Tag[which(plot.data$Regulation.pattern.upon.ATO.treatment == &quot;Upregulation (FC &gt; 1.25) of favorable (HR &lt; 0.67) genes&quot;)] &lt;- 1 plot.data$Tag[which(plot.data$Regulation.pattern.upon.ATO.treatment == &quot;Downregulation (FC &lt; 0.8) of favorable (HR &lt; 0.67) genes&quot;)] &lt;- -1 plot.data$Tag[which(plot.data$Regulation.pattern.upon.ATO.treatment == &quot;Upregulation (FC &gt; 1.25) of unfavorable (HR &gt; 1.5) genes&quot;)] &lt;- -1 plot.mat &lt;- matrix(0, nrow = length(gene.list), ncol = length(TCGA.ALL)) rownames(plot.mat) &lt;- gene.list colnames(plot.mat) &lt;- TCGA.ALL for (i in 1:ncol(plot.mat)) { sub &lt;- plot.data[which(plot.data$TCGA.Cohort == colnames(plot.mat)[i]), ] sub &lt;- sub[which(sub$P.value &lt; 0.05), ] plot.mat[match(sub$Gene, rownames(plot.mat)), i] &lt;- log2(sub$HR) } stat.gene &lt;- data.frame(Gene = rownames(plot.mat), SigCount = rowSums(plot.mat &lt; 0) - rowSums(plot.mat &gt; 0), SigHR = rowMeans(plot.mat * -1) ) stat.gene &lt;- stat.gene[order(stat.gene$SigCount, stat.gene$SigHR, decreasing = T), ] stat.cohort &lt;- data.frame(Cohort = colnames(plot.mat), SigCount = colSums(plot.mat &lt; 0) - colSums(plot.mat &gt; 0), SigHR = colMeans(plot.mat * -1) ) stat.cohort &lt;- stat.cohort[order(stat.cohort$SigCount, stat.cohort$SigHR, decreasing = T), ] plot.info &lt;- plot.data plot.info$Cohort &lt;- factor(as.character(plot.info$TCGA.Cohort), levels = stat.cohort$Cohort) plot.info$Gene &lt;- factor(as.character(plot.info$Gene), levels = rev(stat.gene$Gene) ) plot.info &lt;- plot.info[order(plot.info$P_type, decreasing = T), ] p &lt;- ggplot(plot.info, aes(Cohort, Gene)) + geom_point(aes(size = HR_type, colour = P_type, fill = P_type), shape = 16, alpha = 0.7) + xlab(&quot;&quot;) + ylab(&quot;&quot;) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + scale_size(range = c(1.5,3)) p &lt;- p + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 12)) p &lt;- p + theme(axis.text.y = element_text(size = 3)) p &lt;- p + scale_colour_manual(values = c(`P &lt; 0.05, HR &gt; 1` = &quot;#D01910&quot;, `P &lt; 0.05, HR &lt; 1` = &quot;#00599F&quot;, `P ≥ 0.05` = &quot;#CCCCCC&quot;)) p Related to Extended Data Fig. 3g. plot.mat &lt;- matrix(0, nrow = length(stat.gene$Gene), ncol = length(stat.cohort$Cohort)) rownames(plot.mat) &lt;- stat.gene$Gene colnames(plot.mat) &lt;- stat.cohort$Cohort for (i in 1:ncol(plot.mat)) { sub &lt;- plot.data[which(plot.data$TCGA.Cohort == colnames(plot.mat)[i]), ] plot.mat[match(sub$Gene, rownames(plot.mat)), i] &lt;- sub$Tag } p &lt;- pheatmap(plot.mat, scale = &quot;none&quot;, color = colorRampPalette(c(&quot;#ff9393&quot;,&quot;#fffef3&quot;,&quot;#078aef&quot;))(501), cluster_row = F, cluster_col = F, border_color = NA, fontsize_col = 10, fontsize_row = 2) p 5.4.2 WT-up genes Related to Fig. 3b. plot.data &lt;- read.xlsx(&quot;suppdata/Extended Data Table 3.xlsx&quot;, sheet = 8, startRow = 2) gene.list &lt;- unique(plot.data$Gene) plot.data$HR_type &lt;- 1 plot.data$HR_type[which(plot.data$HR &lt; 0.67 | plot.data$HR &gt; 1.5)] &lt;- 1.5 plot.data$P_type &lt;- &quot;P ≥ 0.05&quot; plot.data$P_type[which(plot.data$P.value &lt; 0.05 &amp; plot.data$HR &gt; 1)] &lt;- &quot;P &lt; 0.05, HR &gt; 1&quot; plot.data$P_type[which(plot.data$P.value &lt; 0.05 &amp; plot.data$HR &lt; 1)] &lt;- &quot;P &lt; 0.05, HR &lt; 1&quot; plot.data$P_type &lt;- factor(as.character(plot.data$P_type), levels = c(&quot;P &lt; 0.05, HR &lt; 1&quot;,&quot;P ≥ 0.05&quot;,&quot;P &lt; 0.05, HR &gt; 1&quot;)) plot.data$Tag &lt;- 0 plot.data$Tag[which(plot.data$Regulation.pattern.upon.ATO.treatment == &quot;Downregulation (FC &lt; 0.8) of unfavorable (HR &gt; 1.5) genes&quot;)] &lt;- 1 plot.data$Tag[which(plot.data$Regulation.pattern.upon.ATO.treatment == &quot;Upregulation (FC &gt; 1.25) of favorable (HR &lt; 0.67) genes&quot;)] &lt;- 1 plot.data$Tag[which(plot.data$Regulation.pattern.upon.ATO.treatment == &quot;Downregulation (FC &lt; 0.8) of favorable (HR &lt; 0.67) genes&quot;)] &lt;- -1 plot.data$Tag[which(plot.data$Regulation.pattern.upon.ATO.treatment == &quot;Upregulation (FC &gt; 1.25) of unfavorable (HR &gt; 1.5) genes&quot;)] &lt;- -1 plot.mat &lt;- matrix(0, nrow = length(gene.list), ncol = length(TCGA.ALL)) rownames(plot.mat) &lt;- gene.list colnames(plot.mat) &lt;- TCGA.ALL for (i in 1:ncol(plot.mat)) { sub &lt;- plot.data[which(plot.data$TCGA.Cohort == colnames(plot.mat)[i]), ] sub &lt;- sub[which(sub$P.value &lt; 0.05), ] plot.mat[match(sub$Gene, rownames(plot.mat)), i] &lt;- log2(sub$HR) } stat.gene &lt;- data.frame(Gene = rownames(plot.mat), SigCount = rowSums(plot.mat &lt; 0) - rowSums(plot.mat &gt; 0), SigHR = rowMeans(plot.mat * -1) ) stat.gene &lt;- stat.gene[order(stat.gene$SigCount, stat.gene$SigHR, decreasing = T), ] stat.cohort &lt;- data.frame(Cohort = colnames(plot.mat), SigCount = colSums(plot.mat &lt; 0) - colSums(plot.mat &gt; 0), SigHR = colMeans(plot.mat * -1) ) stat.cohort &lt;- stat.cohort[order(stat.cohort$SigCount, stat.cohort$SigHR, decreasing = T), ] plot.info &lt;- plot.data plot.info$Cohort &lt;- factor(as.character(plot.info$TCGA.Cohort), levels = stat.cohort$Cohort) plot.info$Gene &lt;- factor(as.character(plot.info$Gene), levels = rev(stat.gene$Gene) ) plot.info &lt;- plot.info[order(plot.info$P_type, decreasing = T), ] p &lt;- ggplot(plot.info, aes(Cohort, Gene)) + geom_point(aes(size = HR_type, colour = P_type, fill = P_type), shape = 16, alpha = 0.7) + xlab(&quot;&quot;) + ylab(&quot;&quot;) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + scale_size(range = c(1.5,3)) p &lt;- p + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 12)) p &lt;- p + theme(axis.text.y = element_text(size = 3)) p &lt;- p + scale_colour_manual(values = c(`P &lt; 0.05, HR &gt; 1` = &quot;#D01910&quot;, `P &lt; 0.05, HR &lt; 1` = &quot;#00599F&quot;, `P ≥ 0.05` = &quot;#CCCCCC&quot;)) p Related to Extended Data Fig. 3g. plot.mat &lt;- matrix(0, nrow = length(stat.gene$Gene), ncol = length(stat.cohort$Cohort)) rownames(plot.mat) &lt;- stat.gene$Gene colnames(plot.mat) &lt;- stat.cohort$Cohort for (i in 1:ncol(plot.mat)) { sub &lt;- plot.data[which(plot.data$TCGA.Cohort == colnames(plot.mat)[i]), ] plot.mat[match(sub$Gene, rownames(plot.mat)), i] &lt;- sub$Tag } p &lt;- pheatmap(plot.mat, scale = &quot;none&quot;, color = colorRampPalette(c(&quot;#ff9393&quot;,&quot;#fffef3&quot;,&quot;#078aef&quot;))(501), cluster_row = F, cluster_col = F, border_color = NA, fontsize_col = 10, fontsize_row = 2) p 5.4.3 MUT-up genes Related to Fig. 3b. plot.data &lt;- read.xlsx(&quot;suppdata/Extended Data Table 3.xlsx&quot;, sheet = 9, startRow = 2) gene.list &lt;- unique(plot.data$Gene) plot.data$HR_type &lt;- 1 plot.data$HR_type[which(plot.data$HR &lt; 0.67 | plot.data$HR &gt; 1.5)] &lt;- 1.5 plot.data$P_type &lt;- &quot;P ≥ 0.05&quot; plot.data$P_type[which(plot.data$P.value &lt; 0.05 &amp; plot.data$HR &gt; 1)] &lt;- &quot;P &lt; 0.05, HR &gt; 1&quot; plot.data$P_type[which(plot.data$P.value &lt; 0.05 &amp; plot.data$HR &lt; 1)] &lt;- &quot;P &lt; 0.05, HR &lt; 1&quot; plot.data$P_type &lt;- factor(as.character(plot.data$P_type), levels = c(&quot;P &lt; 0.05, HR &gt; 1&quot;,&quot;P ≥ 0.05&quot;,&quot;P &lt; 0.05, HR &lt; 1&quot;)) plot.data$Tag &lt;- 0 plot.data$Tag[which(plot.data$Regulation.pattern.upon.ATO.treatment == &quot;Downregulation (FC &lt; 0.8) of unfavorable (HR &gt; 1.5) genes&quot;)] &lt;- 1 plot.data$Tag[which(plot.data$Regulation.pattern.upon.ATO.treatment == &quot;Upregulation (FC &gt; 1.25) of favorable (HR &lt; 0.67) genes&quot;)] &lt;- 1 plot.data$Tag[which(plot.data$Regulation.pattern.upon.ATO.treatment == &quot;Downregulation (FC &lt; 0.8) of favorable (HR &lt; 0.67) genes&quot;)] &lt;- -1 plot.data$Tag[which(plot.data$Regulation.pattern.upon.ATO.treatment == &quot;Upregulation (FC &gt; 1.25) of unfavorable (HR &gt; 1.5) genes&quot;)] &lt;- -1 plot.mat &lt;- matrix(0, nrow = length(gene.list), ncol = length(TCGA.ALL)) rownames(plot.mat) &lt;- gene.list colnames(plot.mat) &lt;- TCGA.ALL for (i in 1:ncol(plot.mat)) { sub &lt;- plot.data[which(plot.data$TCGA.Cohort == colnames(plot.mat)[i]), ] sub &lt;- sub[which(sub$P.value &lt; 0.05), ] plot.mat[match(sub$Gene, rownames(plot.mat)), i] &lt;- log2(sub$HR) } stat.gene &lt;- data.frame(Gene = rownames(plot.mat), SigCount = rowSums(plot.mat &gt; 0) - rowSums(plot.mat &lt; 0), SigHR = rowMeans(plot.mat ) ) stat.gene &lt;- stat.gene[order(stat.gene$SigCount, stat.gene$SigHR, decreasing = T), ] stat.cohort &lt;- data.frame(Cohort = colnames(plot.mat), SigCount = colSums(plot.mat &gt; 0) - colSums(plot.mat &lt; 0), SigHR = colMeans(plot.mat ) ) stat.cohort &lt;- stat.cohort[order(stat.cohort$SigCount, stat.cohort$SigHR, decreasing = T), ] plot.info &lt;- plot.data plot.info$Cohort &lt;- factor(as.character(plot.info$TCGA.Cohort), levels = stat.cohort$Cohort) plot.info$Gene &lt;- factor(as.character(plot.info$Gene), levels = rev(stat.gene$Gene) ) plot.info &lt;- plot.info[order(plot.info$P_type, decreasing = T), ] p &lt;- ggplot(plot.info, aes(Cohort, Gene)) + geom_point(aes(size = HR_type, colour = P_type, fill = P_type), shape = 16, alpha = 0.7) + xlab(&quot;&quot;) + ylab(&quot;&quot;) p &lt;- p + theme_base() + theme(plot.background = element_blank()) p &lt;- p + scale_size(range = c(1.5,3)) p &lt;- p + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 12)) p &lt;- p + theme(axis.text.y = element_text(size = 3)) p &lt;- p + scale_colour_manual(values = c(`P &lt; 0.05, HR &gt; 1` = &quot;#D01910&quot;, `P &lt; 0.05, HR &lt; 1` = &quot;#00599F&quot;, `P ≥ 0.05` = &quot;#CCCCCC&quot;)) p Related to Extended Data Fig. 3g. plot.mat &lt;- matrix(0, nrow = length(stat.gene$Gene), ncol = length(stat.cohort$Cohort)) rownames(plot.mat) &lt;- stat.gene$Gene colnames(plot.mat) &lt;- stat.cohort$Cohort for (i in 1:ncol(plot.mat)) { sub &lt;- plot.data[which(plot.data$TCGA.Cohort == colnames(plot.mat)[i]), ] plot.mat[match(sub$Gene, rownames(plot.mat)), i] &lt;- sub$Tag } p &lt;- pheatmap(plot.mat, scale = &quot;none&quot;, color = colorRampPalette(c(&quot;#ff9393&quot;,&quot;#fffef3&quot;,&quot;#078aef&quot;))(501), cluster_row = F, cluster_col = F, border_color = NA, fontsize_col = 10, fontsize_row = 2) p 5.4.4 Radar plot Radar plots predicting treatment sensitivity of p53 rescue therapy in the indicated cancer types Related to Fig. 3c and 3d. tcga.cohort.potency &lt;- read.xlsx(&quot;suppdata/Extended Data Table 4.xlsx&quot;, sheet = 1, startRow = 2) tcga.cohort.potency$CohortSim &lt;- str_replace_all(tcga.cohort.potency$Cohort, &quot;TCGA-&quot;, &quot;&quot;) idx &lt;- c(&quot;Rank.(Powerfulness.in.regulating.p53.targets)&quot;, &quot;Rank.(Powerfulness.in.regulating.WT-up.genes)&quot;, &quot;Rank.(Powerfulness.in.regulating.MUT-up.genes)&quot;, &quot;Rank.(HR.of.p53-mut)&quot;, &quot;Rank.(MDM2.expression)&quot;, &quot;Rank.(HR.of.expression.of.MUT-up.genes)&quot;, &quot;Rank.(HR.of.expression.of.WT-up.genes)&quot;, &quot;Rank.(HR.of.expression.of.p53.targets)&quot;) idx[!idx %in% colnames(tcga.cohort.potency)] ## character(0) par(mfrow = c(7, 5)) for (kkk in 1:nrow(tcga.cohort.potency)) { plot.mat &lt;- tcga.cohort.potency[kkk, idx ] plot.mat &lt;- rbind(rep(33, length(plot.mat)), rep(0, length(plot.mat)), plot.mat) colnames(plot.mat) &lt;- c(&quot;Power.targets&quot;,&quot;Power.WT-up&quot;,&quot;Power.MUT-up&quot;,&quot;HR.TP53&quot;,&quot;MDM2&quot;,&quot;HR.MUT-up&quot;,&quot;HR.WT-up&quot;,&quot;HR.targets&quot;) radarchart(as.data.frame(plot.mat), pcol = c( &quot;#dd0000&quot;), pfcol = scales::alpha(c(&quot;#f28926&quot;),0.5), plwd = 2, plty = 1, axistype = 1, caxislabels = seq(0, 33, 11), seg = 3, cglcol = &quot;grey&quot;, cglty = 1, cglwd = 0.8, axislabcol = &quot;black&quot;, vlcex = 1.1, pangle=c(10, 45, 120) ) title(paste0(tcga.cohort.potency$CohortSim[kkk], &quot; (&quot;, tcga.cohort.potency$Total.score[kkk], &quot;)&quot;) ) } "],["about-this-project.html", "Chapter 6 About this project Current version Session Information", " Chapter 6 About this project Current version Version: 1.0.0 Release Date: 2023-06-28 Session Information # Show session information sessionInfo() ## R version 4.2.1 (2022-06-23) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Ventura 13.0.1 ## ## Matrix products: default ## LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats4 stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] fmsb_0.7.3 ggthemes_4.2.4 stringr_1.5.0 enrichR_3.1 ## [5] survival_3.4-0 survminer_0.4.9 gplots_3.1.3 pheatmap_1.0.12 ## [9] limma_3.52.4 ggpubr_0.5.0 ggplot2_3.4.2 data.table_1.14.8 ## [13] dendextend_1.16.0 DESeq2_1.36.0 SummarizedExperiment_1.26.1 Biobase_2.56.0 ## [17] MatrixGenerics_1.8.1 matrixStats_0.63.0 GenomicRanges_1.48.0 GenomeInfoDb_1.32.4 ## [21] IRanges_2.30.1 S4Vectors_0.34.0 BiocGenerics_0.42.0 nlme_3.1-160 ## [25] DT_0.26 dplyr_1.1.2 openxlsx_4.2.5.1 ## ## loaded via a namespace (and not attached): ## [1] colorspace_2.1-0 ggsignif_0.6.4 rjson_0.2.21 XVector_0.36.0 rstudioapi_0.14 ## [6] farver_2.1.1 bit64_4.0.5 AnnotationDbi_1.58.0 fansi_1.0.4 codetools_0.2-18 ## [11] splines_4.2.1 cachem_1.0.7 geneplotter_1.74.0 knitr_1.42 jsonlite_1.8.4 ## [16] broom_1.0.1 km.ci_0.5-6 annotate_1.74.0 png_0.1-8 compiler_4.2.1 ## [21] httr_1.4.5 backports_1.4.1 Matrix_1.5-3 fastmap_1.1.1 cli_3.6.1 ## [26] htmltools_0.5.5 tools_4.2.1 gtable_0.3.3 glue_1.6.2 GenomeInfoDbData_1.2.8 ## [31] Rcpp_1.0.10 carData_3.0-5 jquerylib_0.1.4 vctrs_0.6.2 Biostrings_2.64.1 ## [36] xfun_0.39 lifecycle_1.0.3 gtools_3.9.4 rstatix_0.7.1 XML_3.99-0.12 ## [41] zlibbioc_1.42.0 zoo_1.8-12 scales_1.2.1 parallel_4.2.1 RColorBrewer_1.1-3 ## [46] yaml_2.3.7 curl_5.0.0 memoise_2.0.1 gridExtra_2.3 KMsurv_0.1-5 ## [51] sass_0.4.5 stringi_1.7.12 RSQLite_2.2.18 highr_0.10 genefilter_1.78.0 ## [56] caTools_1.18.2 zip_2.2.2 BiocParallel_1.30.4 rlang_1.1.0 pkgconfig_2.0.3 ## [61] bitops_1.0-7 evaluate_0.20 lattice_0.20-45 purrr_1.0.1 labeling_0.4.2 ## [66] htmlwidgets_1.6.2 bit_4.0.5 tidyselect_1.2.0 magrittr_2.0.3 bookdown_0.32 ## [71] R6_2.5.1 generics_0.1.3 DelayedArray_0.22.0 DBI_1.1.3 pillar_1.9.0 ## [76] withr_2.5.0 KEGGREST_1.36.3 abind_1.4-5 RCurl_1.98-1.9 tibble_3.2.1 ## [81] crayon_1.5.2 car_3.1-1 survMisc_0.5.6 KernSmooth_2.23-20 utf8_1.2.3 ## [86] rmarkdown_2.21 viridis_0.6.2 locfit_1.5-9.6 grid_4.2.1 blob_1.2.3 ## [91] digest_0.6.31 xtable_1.8-4 tidyr_1.3.0 munsell_0.5.0 viridisLite_0.4.1 ## [96] bslib_0.4.2 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
